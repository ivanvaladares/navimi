{"version":3,"sources":["src/csss.ts","src/dom.ts","src/fetch.ts","src/helpers.ts","src/hot.ts","src/jss.ts","src/middleware.ts","src/navimi.ts","src/state.ts","src/templates.ts","src/intefaces.ts"],"names":[],"mappings":"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","file":"navimi.js","sourcesContent":["namespace __Navimi_CSSs {\n\n    const loadedCsss: KeyList<string> = {};\n\n    export const isCssLoaded = (url: string): boolean => {\n        return loadedCsss[url] !== undefined;\n    };\n\n    export const getCss = (url: string): string => {\n        return loadedCsss[url];\n    };\n\n    export const fetchCss = (abortController: AbortController, url: string, autoInsert?: boolean): Promise<void | void[]> => {\n        return new Promise<void>(async (resolve, reject) => {\n            if (!url || loadedCsss[url]) {\n                return resolve();\n            }\n            try {\n                const cssCode = await __Navimi_Fetch.fetchFile(url, {\n                    headers: {\n                        Accept: \"text/css\"\n                    },\n                    signal: abortController ? abortController.signal : undefined\n                });\n\n                if (autoInsert) {\n                    __Navimi_Dom.insertCss(cssCode, url, true);\n                    loadedCsss[url] = \"loaded\";\n                } else {\n                    loadedCsss[url] = cssCode;\n                }\n                resolve();\n\n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    };\n    \n    export const reloadCss = (filePath: string, \n                                cssCode: string, \n                                routeList: KeyList<Route>, \n                                currentJS: string, \n                                globalCssUrl: string): void => \n    {\n        \n        const isSameFile = __Navimi_Helpers.isSameFile;\n\n        if (isSameFile(globalCssUrl, filePath)) {\n            console.log(`${filePath} updated.`);\n\n            loadedCsss[globalCssUrl] = cssCode;\n\n            __Navimi_Dom.insertCss(cssCode, \"globalCss\");\n\n            return;\n        }\n\n        for (const routeUrl in routeList) {\n            const { jsUrl, cssUrl } = routeList[routeUrl];\n\n            if (isSameFile(cssUrl, filePath)) {\n                console.log(`${filePath} updated.`);\n\n                loadedCsss[cssUrl] = cssCode;\n\n                if (currentJS === jsUrl) {\n                    __Navimi_Dom.insertCss(cssCode, \"routeCss\");\n                }\n\n                return;\n            }\n        }\n\n    };\n}","namespace __Navimi_Dom {\n\n    export const setTitle = (title: string): void => {\n        document.title = title;\n    };\n\n    export const setNavimiLinks = (navigateTo: (url: string, params?: KeyList<any>) => void): void => {\n        document.querySelectorAll(\"[navimi-link]\").forEach(el => {\n            el.removeAttribute(\"navimi-link\");\n            el.setAttribute(\"navimi-linked\", \"\");\n            el.addEventListener('click', (e: any) => {\n                e.preventDefault();\n                navigateTo(e.target.pathname);\n            });\n        });\n    };\n\n    export const insertCss = (cssCode: string, type?: string, prepend?: boolean): void => {\n        const oldTag = type ? document.querySelector(`[cssId='${type}']`) : undefined;\n        oldTag && oldTag.remove();\n        if (!cssCode) {\n            return;\n        }\n        const style: HTMLStyleElement = document.createElement(\"style\");\n        style.innerHTML = cssCode;\n        type && style.setAttribute(\"cssId\", type);\n        const head = document.getElementsByTagName(\"head\")[0];\n        const target = (head || document.body);\n        prepend ? target.prepend(style) : target.appendChild(style);\n    };\n\n    export const insertJS = (jsCode: string, jsUrl: string): void => {\n        const oldTag = document.querySelector(`[jsUrl='${jsUrl}']`);\n        oldTag && oldTag.remove();\n\n        const script: HTMLScriptElement = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.innerHTML = jsCode;\n        script.setAttribute(\"jsUrl\", jsUrl);\n        const head = document.getElementsByTagName(\"head\")[0];\n        (head || document.body).appendChild(script);\n    };\n\n    export const addLibrary = async (jsOrCssUrl: string | string[]): Promise<void> => {\n        let urls = Array.isArray(jsOrCssUrl) ? jsOrCssUrl : [jsOrCssUrl];\n        urls = urls.filter(url => !__Navimi_JSs.isJsLoaded(url));\n\n        urls.length > 0 && await Promise.all(urls.map(url => {\n            const type = url.split(\".\").pop();\n            if (type.toLowerCase() === \"css\") {\n                __Navimi_CSSs.fetchCss(undefined, url, true);\n            } else {\n                return __Navimi_JSs.fetchJS(undefined, [url]);\n            }\n        })).catch(ex => {\n            throw new Error(ex)\n        });\n\n    };\n\n}","namespace __Navimi_Fetch {\r\n\r\n    export let loadErrors: { [key: string]: string } = {};\r\n\r\n    export const fetchFile = (url: string, options?: RequestInit): Promise<string> => {\r\n        return new Promise((resolve, reject) => {\r\n            delete loadErrors[url];\r\n\r\n            //todo: add retry with options\r\n            fetch(url, options)\r\n                .then(async (data) => {\r\n                    if (!data || !data.ok) {\r\n                        const error = `Could not load the file! - ${url}`;\r\n                        loadErrors[url] = error;\r\n                        return reject(error);\r\n                    }\r\n                    resolve(await data.text());\r\n                })\r\n                .catch(ex => {\r\n                    loadErrors[url] = ex.message;\r\n                    reject(ex);\r\n                });\r\n                \r\n        });\r\n\r\n    };\r\n\r\n}","namespace __Navimi_Helpers {\n\n    const parseQuery = (queryString: string): { [key: string]: string } => {\n        const query: { [key: string]: string } = {};\n        queryString.split('&').map(pair => {\n            const kv = pair.split('=');\n            query[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1] || '');\n        });\n        return query;\n    };\n\n    const splitPath = (path: string): string[] => {\n        if (!path) {\n            return [];\n        }\n\n        const queryPos = path.indexOf(\"?\");\n        path = queryPos >= 0 ? path.substr(0, queryPos) : path;\n\n        return path.split(\"/\").filter(p => p.length > 0);\n    };\n\n    const parsePath = (urlPath: string, urlPattern: string): KeyList<any> => {\n        const queryPos = urlPath.indexOf(\"?\");\n        const query = queryPos > 0 ? urlPath.substr(queryPos + 1, urlPath.length) : \"\";\n        const path = splitPath(urlPath);\n        const pattern = splitPath(urlPattern);\n\n        let params: KeyList<any> = {};\n\n        if (queryPos > 0) {\n            params = {\n                queryString: parseQuery(query)\n            };\n        }\n\n        for (let i = 0; i < pattern.length; i++) {\n            if (pattern[i].charAt(0) === ':') {\n                const name = pattern[i].slice(1);\n                if (path.length <= i) {\n                    return null;\n                }\n                params[name] = decodeURIComponent(path[i]);\n            }\n            else {\n                if (!path[i] || pattern[i].toLowerCase() !== path[i].toLowerCase())\n                    return null;\n            }\n        }\n\n        return params;\n    };\n\n    export const isSameFile = (path1: string, path2: string) => {\n        return path1 && path2 && path1.split(\"?\").shift().toLowerCase() ==\n            path2.split(\"?\").shift().toLowerCase();\n    }\n\n    export const timeout = (ms: number): Promise<void> => {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    };\n\n    export const debounce = (task: (args: any[]) => any, ms: number): () => void => {\n        let timeout: any;\n        return function () {\n            const func = (): void => {\n                timeout = null;\n                task.apply(this, arguments);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(func, ms);\n        };\n    };\n\n    export const getUrl = (): string => {\n        const location = document.location;\n        const matches = location.toString().match(/^[^#]*(#.+)$/);\n        const hash = matches ? matches[1] : \"\";\n        return [location.pathname, location.search, hash].join(\"\");\n    };\n\n    export const removeHash = (url: string): string => {\n        const hashPos = url.indexOf(\"#\");\n        return hashPos > 0 ? url.substr(0, hashPos) : url;\n    };\n\n    export const stringify = (obj: any) => {\n        const visited: any[] = [];\n\n        const iterateObject = (obj: any) : any => {\n\n            if (typeof obj === 'function') {\n                return String(obj);\n            }\n\n            if (obj instanceof Error) {\n                return obj.message;\n            }\n\n            if (obj === null || typeof obj !== 'object') {\n                return obj;\n            }\n\n            if (visited.indexOf(obj) !== -1) {\n                return `[Circular: ${visited.indexOf(obj)}]`;\n            }\n\n            visited.push(obj);\n\n            if (Array.isArray(obj)) {\n                const aResult = obj.map(iterateObject);\n                visited.pop();\n                return aResult;\n            }\n\n            const result = Object.keys(obj).reduce((result: any, prop: string) => {\n                result[prop] = iterateObject(((obj, prop) => {\n                    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                        try {\n                            return obj[prop];\n                        }\n                        catch {\n                            return;\n                        }\n                    }\n                    return obj[prop];\n                })(obj, prop));\n                return result;\n            }, {});\n\n            visited.pop();\n\n            return result;\n        };\n\n        return JSON.stringify(iterateObject(obj));\n    };\n\n    export const cloneObject = (obj: any) : KeyList<any> => {\n        return obj === null || typeof obj !== \"object\" ? obj :  \n                Object.keys(obj).reduce((prev: any, current: string) => \n                    obj[current] !== null && typeof obj[current] === \"object\" ? \n                        (prev[current] = cloneObject(obj[current]), prev) : \n                        (prev[current] = obj[current], prev), Array.isArray(obj) ? [] : {});\n    };\n\n    export const getRouteAndParams = (url: string, routingList: KeyList<Route>): RouteItem => {\n        const urlParams = splitPath(url);\n        const catchAll = routingList[\"*\"];\n        let routeItem, params;\n\n        for (const routeUrl in routingList) {\n            const routeParams = splitPath(routeUrl);\n\n            if (routeParams.length === urlParams.length) {\n                params = parsePath(url, routeUrl);\n                if (params) {\n                    routeItem = routingList[routeUrl];\n                    break;\n                }\n            }\n        }\n        \n        if (!routeItem && catchAll) {\n            routeItem = catchAll;\n        }\n\n        return { routeItem, params };\n    };\n}","namespace __Navimi_Hot {\n\n    let wsHotClient: WebSocket;\n\n    export const openHotWs = (hotOption: number | boolean, callback: any): void => {\n        try {\n            if (!('WebSocket' in window)) { \n                console.error(\"Websocket is not supported by your browser!\");\n                return;\n            }\n\n            console.warn(\"Connecting HOT...\");\n            const port = hotOption === true ? 8080 : hotOption;\n            wsHotClient = null;\n            wsHotClient = new WebSocket(`ws://localhost:${port}`);\n            wsHotClient.addEventListener('message', (e: any) => {\n                try {\n                    const json: hotPayload = JSON.parse(e.data || \"\");\n                    if (json.message) {\n                        console.warn(json.message);\n                        return;\n                    }\n                    if (json.filePath) {\n                        callback((globalCssUrl: string, \n                                    globalTemplatesUrl: string, \n                                    currentJs: string, \n                                    routesList: KeyList<Route>,\n                                    initRoute: any) => {\n\n                            digestHot(json, \n                                        globalCssUrl, \n                                        globalTemplatesUrl, \n                                        currentJs, \n                                        routesList,\n                                        initRoute);\n                        });\n                    }\n                } catch (ex) {\n                    console.error(\"Could not parse HOT message:\", ex);\n                }\n            });\n            wsHotClient.onclose = () => {\n                console.warn('HOT Connection Closed!');\n                setTimeout(openHotWs, 5000, hotOption);\n            };\n        } catch (ex) {\n            console.error(ex);\n        }\n    };\n\n    const digestHot = (payload: hotPayload, \n        globalCssUrl: string, \n        globalTemplatesUrl: string, \n        currentJs: string, \n        routesList: KeyList<Route>,\n        initRoute: any): void => {\n\n        try {\n            const filePath = payload.filePath.replace(/\\\\/g, \"/\");\n            const fileType = filePath.split(\".\").pop();\n            const data = payload.data;\n\n            switch (fileType) {\n                case \"css\":\n                    __Navimi_CSSs.reloadCss(filePath, data, routesList, currentJs, globalCssUrl);\n                    break;\n\n                case \"html\":\n                case \"htm\":\t\n                    __Navimi_Templates.reloadTemplate(filePath, data, routesList, currentJs, globalTemplatesUrl, () => {\n                        initRoute();\n                    });\n                    break;\n\n                case \"js\":\n                    __Navimi_JSs.reloadJs(filePath, data, routesList, currentJs, () => {\n                        initRoute();\n                    });\n\n                case \"gif\":\n                case \"jpg\":\n                case \"jpeg\":\n                case \"png\":\n                case \"svg\":\n                    initRoute();\n                    break;\n            }\n        } catch (ex) {\n            console.error(\"Could not digest HOT payload: \", ex);\n        }\n\n    };\n    \n}","namespace __Navimi_JSs {\n    \n    const navimiLoaderNS: string = \"__navimiLoader\";\n    const callBackNS: string = \"_jsLoaderCallback\";\n    const promiseNS: string = \"_promise_\";\n    \n    const loadedJSs: KeyList<boolean | string> = {};\n    const externalJSs: KeyList<InstanceType<any>> = {};\n    const routesJSs: KeyList<InstanceType<any>> = {};\n    const dependencyJSsMap: KeyList<KeyList<boolean>> = {};\n    const routesJSsServices: KeyList<string[]> = {};\n    \n    let navimiLoader: any;\n    let navigateTo: (url: string, params?: KeyList<any>) => void;\n    let options: Options;\n\n    const awaitJS = (jsUrl: string) => {\n        return new Promise<InstanceType<any>>((resolve, reject) => {\n\n            const loadInterval = setInterval(() => {\n                if (routesJSs[jsUrl]) {\n                    clearInterval(loadInterval);\n                    return resolve(routesJSs[jsUrl]);\n                }\n                if (navimiLoader[promiseNS + jsUrl] === undefined) {\n                    clearInterval(loadInterval);\n                    return reject(`Error loading file! ${jsUrl}`);\n                }\n            }, 50);\n\n        });\n    };\n\n    const fetch = (abortController: AbortController, url: string, external?: boolean): Promise<void | void[]> => {\n        return new Promise<void>(async (resolve, reject) => {\n            try {\n                let jsCode: string;\n                if (typeof loadedJSs[url] === \"string\") {\n                    jsCode = loadedJSs[url] as string;\n                } else {\n                    jsCode = await __Navimi_Fetch.fetchFile(url, {\n                        headers: {\n                            Accept: \"application/javascript\"\n                        },\n                        signal: abortController ? abortController.signal : undefined\n                    });\n\n                }\n            \n                insertJS(url, jsCode, external);\n\n                if (external === undefined) {\n                    navimiLoader[promiseNS + url](true); // resolve the promise - script is loaded\n                }\n\n                resolve();\n                \n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    };\n\n    const insertJS = (url: string, jsCode: string, external?: boolean): void => {\n        let jsHtmlBody = external !== undefined ?\n            `(function(){window.${navimiLoaderNS}.${callBackNS}(\"${url}\", ${external}, (function(){return ${jsCode}   \n            })())}())` : jsCode;\n\n        loadedJSs[url] = external ? true : jsCode;            \n        __Navimi_Dom.insertJS(jsHtmlBody, url);\n    };\n\n    const instantiateJS = async (\n        jsUrl: string, \n        external: boolean, //todo: change to isRouteScript\n        JsClass: InstanceType<any>): Promise<void> => {\n\n        const promiseToResolve: any = navimiLoader[promiseNS + jsUrl];\n        const promiseToReject: any = navimiLoader[promiseNS + jsUrl + \"_reject\"];\n\n        // remove callbacks\n        setTimeout(() => {\n            delete navimiLoader[promiseNS + jsUrl];\n            delete navimiLoader[promiseNS + jsUrl + \"_reject\"];\n        }, 10);        \n\n        if (external) {\n            // keep this instance to reuse later\n            externalJSs[jsUrl] = JsClass;\n            promiseToResolve && promiseToResolve(Object.freeze(JsClass));\n            return;\n        }\n\n        try {\n            __Navimi_State.unwatchState(jsUrl);\n\n            const routerFunctions = Object.freeze({\n                addLibrary: __Navimi_Dom.addLibrary,\n                setTitle: __Navimi_Dom.setTitle,\n                navigateTo,\n                getTemplate: __Navimi_Templates.getTemplate,\n                fetchJS: (url: string | string[]) => {\n                    const urls = Array.isArray(url) ? url : [url];\n                    urls.map(u => {\n                        dependencyJSsMap[u] = {\n                            ...dependencyJSsMap[u] || {},\n                            [jsUrl]: true\n                        };\n                    });\n                    return fetchJS(undefined, urls, true);\n                },\n                fetchTemplate: (url: string) => {\n                    const urls: string[] = Array.isArray(url) ? url : [url];\n                    return __Navimi_Templates.fetchTemplate(undefined, urls, jsUrl);\n                },\n                setState: __Navimi_State.setState,\n                getState: __Navimi_State.getState,\n                setNavimiLinks: () => __Navimi_Dom.setNavimiLinks(navigateTo),\n                unwatchState: (key: string) => __Navimi_State.unwatchState(jsUrl, key),\n                watchState: (key: string, callback: (state: KeyList<any>) => void) =>\n                    __Navimi_State.watchState(jsUrl, key, callback),\n            });\n\n            let services: { [serviceName: string]: InstanceType<any> };\n\n            if (routesJSsServices[jsUrl].length > 0) {\n                while (true) {\n                    if (routesJSsServices[jsUrl].map((sn: string) =>\n                        externalJSs[options.services[sn]] === undefined).indexOf(true) === -1) {\n                        break;\n                    }\n                    if (routesJSsServices[jsUrl].map(sn =>\n                        options.services[sn]).find(su => __Navimi_Fetch.loadErrors[su])) {\n                        return;\n                    }\n                    await __Navimi_Helpers.timeout(10);\n                }\n\n                routesJSsServices[jsUrl].map((sn: string) => {\n                    services = {\n                        ...services,\n                        [sn]: externalJSs[options.services[sn]]\n                    };\n                });\n            }\n\n            let jsInstance = new JsClass(routerFunctions, services);\n\n            //keep this instance to reuse later\n            routesJSs[jsUrl] = jsInstance;\n            promiseToResolve && promiseToResolve(jsInstance);\n\n        } catch (error) {\n            promiseToReject && promiseToReject(error);\n\n        }\n\n    };\n\n    export const init = (config: any): void => {\n        navigateTo = config.navigateTo;\n        options = config.options;\n        \n        // @ts-ignore\n        navimiLoader = window[navimiLoaderNS] = {\n            [callBackNS]: instantiateJS, // initialize JS loader namespace\n        };\n    };\n    \n    export const isJsLoaded = (url: string): boolean => {\n        return loadedJSs[url] !== undefined;\n    };\n\n    export const getInstance = (url: string): InstanceType<any> => {\n        return routesJSs[url];\n    };\n\n    export const fetchJS = (abortController: AbortController, urls: string[], external?: boolean): Promise<InstanceType<any> | InstanceType<any>[]> => {\n\n        const init = (url: string): Promise<InstanceType<any>> => {\n            return new Promise<InstanceType<any>>(async (resolve, reject) => {\n\n                // return the instance if this js is already loaded\n                if (external && externalJSs[url]) {\n                    return resolve(externalJSs[url]);\n                } else {\n                    if (routesJSs[url]) {\n                        return resolve(routesJSs[url]);\n                    }\n                }\n\n                // route repeated calls to an awaiter\n                if (navimiLoader[promiseNS + url]) {\n                    await awaitJS(url)\n                        .then(resolve)\n                        .catch(reject);\n                    return;\n                }\n\n                // let the js resolve the promise itself (*1)\n                navimiLoader[promiseNS + url] = resolve;\n                navimiLoader[promiseNS + url + \"_reject\"] = reject;\n\n                fetch(abortController, url, external).catch(ex => {\n                    navimiLoader[promiseNS + url + \"_reject\"](ex);\n                });\n            });\n        }\n\n        return urls.length > 1 ? Promise.all(urls.map(init)) : init(urls[0]);\n    };\n\n    export const loadServices = (abortController: AbortController, jsUrl: string, services: string[]): void => {\n\n        if (!jsUrl || !services || services.length === 0) { \n            return;\n        }\n\n        routesJSsServices[jsUrl] = routesJSsServices[jsUrl] || [];\n\n        if (services && services.length > 0) {\n            let notFoundServices: string[] = [];\n            const servicesUrls = services.map(sn => {\n                const su: string = options.services && options.services[sn];\n                if (su === undefined) {\n                    notFoundServices.push(sn);\n                } else {\n                    routesJSsServices[jsUrl].indexOf(sn) === -1 && routesJSsServices[jsUrl].push(sn);\n                    dependencyJSsMap[su] = {\n                        ...dependencyJSsMap[su] || {},\n                        [jsUrl]: true\n                    };\n                }\n                return su;\n            });\n\n            if (notFoundServices.length > 0) {\n                throw new Error(\"Service(s) not defined: \" + notFoundServices.join(\", \"));\n            }\n\n            Promise.all(servicesUrls.filter(su => su !== undefined)\n                .map(su => fetchJS(abortController, [su], true)));\n        }\n\n    };\n\n    export const initJS = async (jsUrl: string, params: KeyList<any>): Promise<void> => {\n\n        const jsInstance = getInstance(jsUrl);\n\n        jsInstance && jsInstance.init &&\n            await jsInstance.init(params);\n\n    };\n\n    export const reloadJs = (filePath: string, \n                            jsCode: string, \n                            routeList: KeyList<Route>, \n                            currentJS: string, \n                            callback: any): void => \n    {\n\n        const isSameFile = __Navimi_Helpers.isSameFile;\n\n        for (const routeUrl in routeList) {\n            const { jsUrl } = routeList[routeUrl];\n\n            if (isSameFile(jsUrl, filePath)) {\n\n                console.log(`${filePath} updated.`);\n\n                delete routesJSs[jsUrl];\n\n                navimiLoader[promiseNS + jsUrl] = () => {\n                    if (jsUrl === currentJS) {\n                        //reload route if current JS is updated\n                        callback();\n                    }\n                };\n\n                insertJS(jsUrl, jsCode, false);\n\n                return;\n            }\n        }\n\n        for (const jsUrl in dependencyJSsMap) {\n            if (isSameFile(jsUrl, filePath)) {\n                console.log(`${filePath} updated.`);\n\n                delete externalJSs[jsUrl];\n\n                navimiLoader[promiseNS + jsUrl] = () => {\n                    Object.keys(dependencyJSsMap[jsUrl]).map(s => {\n                        //clear all dependent JSs that depends of this JS\n                        delete routesJSs[s];\n\n                        if (s === currentJS) {\n                            //reload route if current JS is updated\n                            callback();\n                        }\n                    });\n                };\n\n                insertJS(filePath, jsCode, true);\n            }\n        }\n    };\n\n}","namespace __Navimi_Middleware {\r\n   \r\n    const middlewareStack: Middleware[] = [];\r\n\r\n    export const addMiddlewares = (middlewares: Middleware[]): void => {\r\n        if (Array.isArray(middlewares)) {\r\n           middlewareStack.push(...middlewares.filter(mdw => mdw !== undefined));\r\n        }\r\n    };\r\n\r\n    export const executeMiddlewares = async (abortController: AbortController, context: Context, callback: (url: string, params: KeyList<any>) => void): Promise<void> => {\r\n        let prevIndex = -1;\r\n        const runner = async (resolve: any, reject: any, index: number = 0): Promise<void> => {\r\n            if (index === prevIndex) {\r\n                console.warn('next() called multiple times');\r\n            }\r\n            prevIndex = index;\r\n            const middleware = middlewareStack[index];\r\n            if (middleware) {\r\n                await middleware(context, async (url: string, params?: KeyList<any>) => {\r\n                    if (abortController.signal.aborted) {\r\n                        reject();\r\n                    } else {\r\n                        if (!url) {\r\n                            await runner(resolve, reject, index + 1);\r\n                        } else {\r\n                            reject();\r\n                            callback(url, params);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                resolve();\r\n            }\r\n        }\r\n        await new Promise(await runner).catch(_ => { });\r\n    };\r\n\r\n}","/*! \n * Navimi v0.1.1\n * Developed by Ivan Valadares \n * ivanvaladares@hotmail.com\n * https://github.com/ivanvaladares/navimi\n */\n\nclass Navimi {\n\n    private callId: number;\n    private abortController: AbortController;\n    private currentJS: string;\n    private currentUrl: string;\n    private routesParams: KeyList<any>;\n    private routesList: KeyList<Route>;\n    private options: Options;\n    private win: any;\n\n    /**\n    * @typedef {Object} Route - An route definition\n    * @property {string} routes.title - The title that will be displayed on the browser\n    * @property {string} routes.jsUrl - The path to the route script\n    * @property {string=} routes.cssUrl - The path to the route css\n    * @property {string=} routes.templatesUrl - The path to the templates file of this route \n    * @property {string[]=} routes.dependsOn - An array of services names for this route\n    * @property {Object.<string, *>=} routes.metadata - Any literal you need to pass down to this route and middlewares \n    * @param {Object.<string, Route>} routes - A collection of Route\n    * @param {Object} [options] - Navimi options \n    * @param {string=} options.globalCssUrl - The path to the global css\n    * @param {string=} options.globalTemplatesUrl - The path to the global templates file\n    * @param {Object.<string, string>=} options.services - A collection of all services {[service name]: script path}\n    * @param {((context: Object.<string, *>, next:(url: string, params?: Object.<string, *>) => void) => void)[]=} options.middlewares - An array of functions to capture the request\n    * @param {(number | boolean)=} options.hot - The port to the websocket at localhost\n    * @param {((context: Object.<string, *>, navigateTo: (url: string, params?: Object.<string, *>) => void)=} options.onAfterRoute - A function invoked after the routing is done\n    * @param {((context: Object.<string, *>, navigateTo: (url: string, params?: Object.<string, *>) => void)=} options.onBeforeRoute - A function invoked before middlewares and routing\n    * @param {function(Error): void=} options.onError - A function to capture erros from routes\n    * @returns {Object} - The Navimi instance \n    */\n    constructor(routes: KeyList<Route>, options?: Options) {\n\n        this.callId = 0;\n        this.abortController = new AbortController();\n        this.currentJS = undefined;\n        this.currentUrl = undefined;\n        this.routesParams = {};\n        this.routesList = routes || {};\n        this.options = options || {};\n        this.win = window ? window : {};\n\n        //@ts-ignore\n        this.win.addEventListener('popstate', () => {\n            this.initRoute();\n        });\n\n        //@ts-ignore\n        this.win.navigateTo = this.navigateTo;\n\n        __Navimi_JSs.init({\n            navigateTo: this.navigateTo.bind(this),\n            options: this.options,\n        });\n\n        //add middlewares\n        __Navimi_Middleware.addMiddlewares(this.options.middlewares);\n\n        (async () => {\n            if (this.options.globalCssUrl || this.options.globalTemplatesUrl) {\n\n                await Promise.all([\n                    __Navimi_CSSs.fetchCss(undefined, this.options.globalCssUrl),\n                    __Navimi_Templates.fetchTemplate(undefined, [this.options.globalTemplatesUrl]),\n                ]).catch(this.reportError);\n\n                __Navimi_Dom.insertCss(__Navimi_CSSs.getCss(this.options.globalCssUrl), \"globalCss\");\n            }\n        })();\n\n        this.initRoute();\n\n        if (this.options.hot) {\n            setTimeout(__Navimi_Hot.openHotWs, 1000, this.options.hot, \n                (callback: (globalCssUrl: string, \n                    globalTemplatesUrl: string, \n                    currentJs: string, \n                    routesList: KeyList<Route>,\n                    initRoute: any) => void) => {\n\n                    callback(this.options.globalCssUrl, \n                        this.options.globalTemplatesUrl, \n                        this.currentJS, \n                        this.routesList, () => {\n                        this.initRoute(undefined, this.routesParams[this.currentJS], true);\n                    });\n                });\n        }\n    }\n\n    private navigateTo = (url: string, params?: KeyList<any>): void => {\n        this.initRoute(url, params);\n    };\n\n    private reportError = (error: Error): void => {\n        if (this.options.onError) {\n            this.options.onError(error);\n            return;\n        }\n        console.error(error);\n    }\n\n    private initRoute = async (urlToGo?: string, navParams?: KeyList<any>, force?: boolean): Promise<void> => {\n        const url = __Navimi_Helpers.removeHash(urlToGo || __Navimi_Helpers.getUrl());\n\n        if (!force) {\n            if (this.currentUrl === url) {\n                return;\n            }\n            this.abortController.abort();\n            this.abortController = new AbortController();\n        }\n\n        const callId = ++this.callId;\n        const pushState = urlToGo !== undefined;\n\n        let { routeItem, params } = __Navimi_Helpers.getRouteAndParams(url, this.routesList);\n\n        if (navParams !== undefined) {\n            params = {\n                ...params,\n                ...navParams\n            };\n        }\n\n        if (this.options.onBeforeRoute) {\n            const shouldContinue = await this.options.onBeforeRoute({ url, routeItem, params }, this.navigateTo);\n            if (shouldContinue === false) {\n                return;\n            }\n        }\n\n        if (this.currentJS && !force) {\n            const currentJsInstance = __Navimi_JSs.getInstance(this.currentJS);\n\n            if (currentJsInstance) {\n                const beforeLeave = currentJsInstance.beforeLeave;\n\n                if (beforeLeave) {\n                    const shouldContinue = beforeLeave({ url, routeItem, params });\n                    if (shouldContinue === false) {\n                        if (!pushState) {\n                            history.forward();\n                        }\n                        return;\n                    }\n                }\n\n                currentJsInstance.destroy && currentJsInstance.destroy();\n            }\n        }\n\n        if (!routeItem) {\n            callId === this.callId && this.reportError(new Error(\"No route match for url: \" + url));\n            return;\n        }\n\n        await __Navimi_Middleware.executeMiddlewares(this.abortController, { url, routeItem, params }, (url: string, params: any) => {\n            this.initRoute(url, params, true);\n        });\n\n        if (callId < this.callId) {\n            console.warn(\"Navimi: A middleware has called navigateTo()\");\n            return;\n        }\n\n        this.currentUrl = url;\n\n        try {\n\n            const { title, jsUrl, cssUrl, templatesUrl, dependsOn } = routeItem || {};\n\n            if (!jsUrl && !templatesUrl) {\n                throw new Error(\"The route must define the 'jsUrl' or 'templatesUrl'!\");\n            }\n\n            if (jsUrl) {\n                this.currentJS = jsUrl;\n                this.routesParams[jsUrl] = { url, routeItem, params };\n            }\n\n            if (pushState) {\n                if (navParams?.replaceUrl) {\n                    history.replaceState(null, null, urlToGo);\n                } else {\n                    history.pushState(null, null, urlToGo);\n                }\n            }\n\n            __Navimi_CSSs.fetchCss(this.abortController, cssUrl).catch(_ => { });\n            __Navimi_Templates.fetchTemplate(this.abortController, [templatesUrl]).catch(_ => { });\n            try {\n                __Navimi_JSs.loadServices(this.abortController, jsUrl, dependsOn);\n            } catch (ex) {\n                this.reportError(ex);\n            }\n    \n            if (jsUrl) {\n                await __Navimi_JSs.fetchJS(this.abortController, [jsUrl], false);\n            }\n\n            //wait css and template to load if any\n            while ((cssUrl && !__Navimi_CSSs.isCssLoaded(cssUrl)) ||\n                (templatesUrl && !__Navimi_Templates.isTemplateLoaded(templatesUrl)) ||\n                (this.options.globalCssUrl &&\n                    !__Navimi_CSSs.isCssLoaded(this.options.globalCssUrl)) ||\n                (this.options.globalTemplatesUrl &&\n                    !__Navimi_Templates.isTemplateLoaded(this.options.globalTemplatesUrl))) {\n\n                await __Navimi_Helpers.timeout(10);\n\n                if (callId < this.callId) {\n                    return;\n                }\n\n                //check if any load error occured\n                if ((cssUrl && __Navimi_Fetch.loadErrors[cssUrl]) ||\n                    (templatesUrl && __Navimi_Fetch.loadErrors[templatesUrl]) ||\n                    (this.options.globalCssUrl &&\n                        __Navimi_Fetch.loadErrors[this.options.globalCssUrl]) ||\n                    (this.options.globalTemplatesUrl &&\n                        __Navimi_Fetch.loadErrors[this.options.globalTemplatesUrl])) {\n                    this.reportError(\n                        new Error(\n                            __Navimi_Fetch.loadErrors[cssUrl] ||\n                            __Navimi_Fetch.loadErrors[templatesUrl] ||\n                            __Navimi_Fetch.loadErrors[this.options.globalCssUrl] ||\n                            __Navimi_Fetch.loadErrors[this.options.globalTemplatesUrl]\n                        )\n                    );\n                    return;\n                }\n            }\n\n            __Navimi_Dom.setTitle(title);\n\n            try {\n\n                if (jsUrl) {\n                    await __Navimi_JSs.initJS(jsUrl, this.routesParams[jsUrl]);\n                } else {\n                    const template = __Navimi_Templates.getTemplate(templatesUrl) as string;\n                    const body = document.querySelector(\"body\");\n                    if (template && body) {\n                        body.innerHTML = template;\n                    }\n                    return;\n                }\n\n            } catch (ex) {\n                this.reportError(ex);\n\n            } finally {\n\n                if (callId < this.callId) {\n                    return;\n                }\n    \n                __Navimi_Dom.setNavimiLinks(this.navigateTo);\n                \n                __Navimi_Dom.insertCss(__Navimi_CSSs.getCss(cssUrl), \"routeCss\");\n    \n                this.options.onAfterRoute &&\n                    this.options.onAfterRoute({ url, routeItem, params }, this.navigateTo);\n            }\n\n        } catch (ex) {\n            this.reportError(ex);\n        }\n        \n    };\n\n}","namespace __Navimi_State {\r\n\r\n    const state: KeyList<any> = {};\r\n    const stateWatchers: KeyList<any> = {};\r\n    let prevState: KeyList<any> = {};\r\n    let stateDiff: { [key: string]: boolean } = {};\r\n\r\n    const getStateDiff = (keys: string[]): void => {\r\n        keys.sort((a, b) => b.length - a.length).map(key => {\r\n            if (!stateDiff[key]) {\r\n                const sOld = __Navimi_Helpers.stringify(getState(key, prevState) || \"\");\r\n                const sNew = __Navimi_Helpers.stringify(getState(key, state) || \"\");\r\n                if (sOld !== sNew) {\r\n                    stateDiff[key] = true;\r\n                    //set upper keys as changed so we don't test them again\r\n                    keys.map(upperKey => {\r\n                        if (key !== upperKey && key.indexOf(upperKey) === 0) {\r\n                            stateDiff[upperKey] = true;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const invokeStateWatchers = __Navimi_Helpers.debounce((): void => {\r\n        const keys = Object.keys(stateWatchers);\r\n        const diff = Object.keys(stateDiff);\r\n        stateDiff = {};\r\n        keys.filter(key => diff.includes(key)).sort((a, b) => b.length - a.length).map(key => {\r\n            Object.keys(stateWatchers[key]).map((cs: string) => {\r\n                const sNew = getState(key);\r\n                stateWatchers[key][cs] &&\r\n                    stateWatchers[key][cs].map((cb: (state: any) => void) => cb && cb(sNew));\r\n            });\r\n        });\r\n    }, 10);\r\n\r\n    const mergeState = (state: any, newState: any): void => {\r\n        if (newState instanceof Error) {\r\n            newState = { \r\n                ...newState,\r\n                message: newState.message,\r\n                stack: newState.stack,\r\n            };\r\n        }\r\n        const isObject = (item: any): boolean =>\r\n            item && typeof item === 'object' && !Array.isArray(item) && item !== null;\r\n        if (isObject(state) && isObject(newState)) {\r\n            for (const key in newState) {\r\n                if (isObject(newState[key])) {\r\n                    !state[key] && Object.assign(state, { [key]: {} });\r\n                    mergeState(state[key], newState[key]);\r\n                } else {\r\n                    Object.assign(state, { [key]: newState[key] });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    export const setState = (newState: KeyList<any>): void => {\r\n        const observedKeys = Object.keys(stateWatchers);\r\n        if (observedKeys.length > 0) {\r\n            prevState = __Navimi_Helpers.cloneObject(state);\r\n        }\r\n        mergeState(state, newState);\r\n        if (observedKeys.length > 0) {\r\n            getStateDiff(observedKeys);\r\n            invokeStateWatchers();\r\n        }\r\n    };\r\n\r\n    export const getState = (key?: string, _state?: any): KeyList<any> => {\r\n        const st = key ?\r\n            key.split('.').reduce((v, k) => (v && v[k]) || undefined, _state || state) :\r\n            _state || state;\r\n        return st ? Object.freeze(__Navimi_Helpers.cloneObject(st)) : undefined;\r\n    };\r\n\r\n    export const watchState = (jsUrl: string, key: string, callback: (state: any) => void): void => {\r\n        if (!key || !callback) {\r\n            return;\r\n        }\r\n        if (!stateWatchers[key]) {\r\n            stateWatchers[key] = {};\r\n        }\r\n        stateWatchers[key] = {\r\n            ...stateWatchers[key],\r\n            [jsUrl]: [\r\n                ...(stateWatchers[key][jsUrl] || []),\r\n                callback\r\n            ]\r\n        };\r\n    };\r\n\r\n    export const unwatchState = (jsUrl: string, key?: string | string[]): void => {\r\n        const remove = (key: string): void => {\r\n            stateWatchers[key][jsUrl] = undefined;\r\n            delete stateWatchers[key][jsUrl];\r\n            Object.keys(stateWatchers[key]).length === 0 &&\r\n                delete stateWatchers[key];\r\n        }\r\n\r\n        if (key) {\r\n            const keys = Array.isArray(key) ? key : [key];\r\n            keys.map(id => {\r\n                !stateWatchers[id] && (stateWatchers[id] = {});\r\n                remove(id);\r\n            });\r\n            return;\r\n        }\r\n\r\n        Object.keys(stateWatchers).map(remove);\r\n    };\r\n\r\n}","namespace __Navimi_Templates {\r\n\r\n    let templatesCache: KeyList<string> = {};\r\n    let loadedTemplates: KeyList<boolean> = {};\r\n    let dependencyTemplatesMap: KeyList<KeyList<boolean>> = {};\r\n\r\n    const loadTemplate = (templateCode: string, url?: string): void => {\r\n        const regIni = new RegExp(\"<t ([^>]+)>\");\r\n        const regEnd = new RegExp(\"</t>\");\r\n        const regId = new RegExp(\"id=\\\"([^\\\"]+)\\\"\");\r\n        let tempCode = templateCode;\r\n\r\n        if (!regIni.exec(tempCode)) {\r\n            templatesCache[url] = tempCode;\r\n            return;\r\n        }\r\n\r\n        while (templateCode && templateCode.length > 0) {\r\n            const iniTemplate = regIni.exec(tempCode);\r\n\r\n            if (!iniTemplate || iniTemplate.length === 0) {\r\n                break;\r\n            }\r\n\r\n            const regIdRes = regId.exec(iniTemplate[1]);\r\n            const idTemplate = regIdRes.length > 0 && regIdRes[1];\r\n            tempCode = tempCode.substr(iniTemplate.index + iniTemplate[0].length);\r\n            const endTemplate = regEnd.exec(tempCode);\r\n\r\n            if (!idTemplate || !endTemplate || endTemplate.length === 0) {\r\n                break;\r\n            }\r\n\r\n            templatesCache[idTemplate] = tempCode.substr(0, endTemplate.index);\r\n        }\r\n    };\r\n\r\n    export const isTemplateLoaded = (url: string): boolean => {\r\n        return loadedTemplates[url] !== undefined;\r\n    };\r\n\r\n    export const getTemplate = (templateId: string | string[]): string | string[] => {\r\n        const ids = Array.isArray(templateId) ? templateId : [templateId];\r\n        const arrTemplates = ids.map(id => templatesCache[id]);\r\n        return arrTemplates.length > 1 ? arrTemplates : arrTemplates[0];\r\n    };\r\n\r\n    export const fetchTemplate = (abortController: AbortController, urls: string[], jsUrl?: string): Promise<void | void[]> => {\r\n        const init = (url: string): Promise<void> => {\r\n            return new Promise(async (resolve, reject) => {\r\n                if (!url || loadedTemplates[url]) {\r\n                    return resolve();\r\n                }\r\n                try {\r\n                    const templateCode = await __Navimi_Fetch.fetchFile(url, {\r\n                        headers: {\r\n                            Accept: \"text/html\"\r\n                        },\r\n                        signal: abortController ? abortController.signal : undefined\r\n                    });\r\n\r\n                    loadTemplate(templateCode, url);\r\n                    loadedTemplates[url] = true;\r\n                    resolve();\r\n\r\n                } catch (ex) {\r\n                    reject(ex);\r\n                }\r\n            });\r\n        };\r\n\r\n        if (jsUrl) {\r\n            urls.map((u: string) => {\r\n                dependencyTemplatesMap[u] = {\r\n                    ...dependencyTemplatesMap[u] || {},\r\n                    [jsUrl]: true\r\n                };\r\n            });\r\n        }\r\n\r\n        return urls.length > 1 ? Promise.all(urls.map(init)) : init(urls[0]);\r\n    };\r\n\r\n    export const reloadTemplate = (filePath: string, \r\n                                templateCode: string, \r\n                                routeList: KeyList<Route>, \r\n                                currentJS: string, \r\n                                globalTemplatesUrl: string, \r\n                                callback: any): void => \r\n    {\r\n        const isSameFile = __Navimi_Helpers.isSameFile;\r\n\r\n        if (isSameFile(globalTemplatesUrl, filePath)) {\r\n            console.log(`${filePath} updated.`);\r\n            loadTemplate(templateCode, globalTemplatesUrl);\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        for (const routeUrl in routeList) {\r\n            const { jsUrl, templatesUrl } = routeList[routeUrl];\r\n\r\n            if (isSameFile(templatesUrl, filePath)) {\r\n                console.log(`${filePath} updated.`);\r\n\r\n                loadTemplate(templateCode, templatesUrl);\r\n\r\n                currentJS === jsUrl && callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (const templatesUrl in dependencyTemplatesMap) {\r\n            if (isSameFile(templatesUrl, filePath)) {\r\n                console.log(`${filePath} updated.`);\r\n\r\n                loadTemplate(templateCode, templatesUrl);\r\n\r\n                Object.keys(dependencyTemplatesMap[templatesUrl]).map(s => {\r\n                    if (s === currentJS) {\r\n                        //reload route if current JS is updated\r\n                        callback();\r\n                    }\r\n                });\r\n                \r\n            }\r\n        }\r\n\r\n    };\r\n}","interface KeyList<T> {\n    [key: string]: T\n}\n\ninterface Route {\n    title: string;\n    jsUrl?: string;\n    cssUrl?: string;\n    templatesUrl?: string;\n    dependsOn?: string[];\n    metadata?: KeyList<any>;\n}\n\ninterface RouteItem {\n    routeItem: Route;\n    params: KeyList<any>;\n}\n\ninterface RouterFunctions {\n    addLibrary: (jsOrCssUrl: string | string[]) => Promise<void>;\n    fetchJS: (jsUrl: string | string[]) => Promise<InstanceType<any> | InstanceType<any>[]>;\n    fetchTemplate: (templateUrl: string | string[]) => Promise<void | void[]>;\n    getState: (key?: string) => any;\n    getTemplate: (templateId: string | string[]) => string | string[];\n    navigateTo: (url: string, params?: KeyList<any>) => void;\n    setNavimiLinks: () => void;\n    setTitle: (title: string) => void;\n    setState: (state: KeyList<any>) => void;\n    unwatchState: (key?: string | string[]) => void;\n    watchState: (key: string, callback: (state: any) => void) => void;\n}\n\ntype Next = (url?: string, params?: KeyList<any>) => Promise<void> | void;\ntype Context = { url: string, routeItem: Route, params: KeyList<any> };\ntype Middleware = (context: Context, next: Next) => Promise<void> | void;\n\ninterface Options {\n    globalCssUrl?: string;\n    globalTemplatesUrl?: string;\n    services?: { [serviceName: string]: string };\n    middlewares?: Middleware[];\n    hot?: number | boolean;\n    onAfterRoute?: (context: Context, navigateTo: (url: string, params?: KeyList<any>) => void) => void;\n    onBeforeRoute?: (context: Context, navigateTo: (url: string, params?: KeyList<any>) => void) => boolean | Promise<boolean>;\n    onError?: (error: Error) => void;\n}\n\ninterface hotPayload {\n    filePath?: string;\n    data?: string;\n    message?: string;\n}\n\ndeclare class NavimiRoute { //todo: fix this documentation\n    /**\n    * @typedef {Object} Functions - A collection of functions\n    * @property {string} functions.title - The title that will be displayed on the browser\n    * @property {string} functions.jsUrl - The path to the route script\n    * @property {string=} functions.cssUrl - The path to the route css\n    * @property {string=} functions.templatesUrl - The path to the templates file of this route\n    * @property {string[]=} functions.dependsOn - An array of services names for this route\n    * @property {Object.<string, *>=} functions.metadata - Any literal you need to pass down to this route and middlewares\n    * @param {Object[]} services - A collection of services\n    * @returns {Object} - The Navimi route\n    */\n    /**\n    * @param {Object} RouterFunctions - A collection of functions\n    * @param {Object[]} services - A collection of services\n    * optional\n    * variables initialization\n    * Invoked after options.onBeforeRoute and options.middlewares\n    * Invoked before options.onAfterRoute\n    */\n    constructor(functions: RouterFunctions, services: any[]);\n    /**\n     * @param {((context: Object.<string, *>} context - The context of the route ({ url, Route, params })\n    * Here you should render your page components\n    * Invoked after options.onBeforeRoute and options.middlewares\n    * Invoked before options.onAfterRoute\n     */\n    init(context: Context): Promise<void> | void;\n    /**\n     * @param {((context: Object.<string, *>} context - The context of the route ({ url, Route, params })\n    * @returns {boolean} - False if you need to keep the user on this page\n    */\n    beforeLeave(context: Context): void;\n    /**\n    * @returns {boolean} - False if you need to keep the user on this page\n    */\n    destroy(): void;\n}"]}