{"version":3,"file":"navimi.js","sources":["../src/core.ts","../src/fetch.ts","../src/csss.ts","../src/jss.ts","../src/templates.ts","../src/middlewares.ts","../src/state.ts","../src/hot.ts","../src/helpers.ts","../src/components.ts","../src/navimi.ts"],"sourcesContent":["import { INavimi_CSSs } from './@types/INavimi_CSSs';\r\nimport { INavimi_Fetch } from './@types/INavimi_Fetch';\r\nimport { INavimi_Helpers } from './@types/INavimi_Helpers';\r\nimport { INavimi_Hot } from './@types/INavimi_Hot';\r\nimport { INavimi_JSs } from './@types/INavimi_JSs';\r\nimport { INavimi_Middlewares } from './@types/INavimi_Middleware';\r\nimport { INavimi_Templates } from './@types/INavimi_Templates';\r\nimport { INavimi_Core } from './@types/iNavimi_Core';\r\nimport { \r\n    INavimi_Route, \r\n    INavimi_Options, \r\n    INavimi_Services, \r\n    INavimi_Context \r\n} from './@types/Navimi';\r\n\r\nclass __Navimi_Core implements INavimi_Core {\r\n\r\n    private _callId: number;\r\n    private _abortController: AbortController;\r\n    private _currentJSUrl: string;\r\n    private _currentUrl: string;\r\n    private _routesParams: Record<string, unknown>;\r\n    private _routesList: Record<string, INavimi_Route>;\r\n    private _options: INavimi_Options;\r\n    private _globalCssInserted: boolean;\r\n    private _win: any;\r\n\r\n    private _navimiFetch: INavimi_Fetch;\r\n    private _navimiJSs: INavimi_JSs;\r\n    private _navimiCSSs: INavimi_CSSs;\r\n    private _navimiTemplates: INavimi_Templates;\r\n    private _navimiMiddlewares: INavimi_Middlewares;\r\n    private _navimiHot: INavimi_Hot;\r\n    private _navimiHelpers: INavimi_Helpers;\r\n\r\n    constructor(routes: Record<string, INavimi_Route>, services: INavimi_Services, options?: INavimi_Options) {\r\n\r\n        this._callId = 0;\r\n        this._abortController = window['AbortController'] ? new AbortController() : undefined;\r\n        this._currentJSUrl;\r\n        this._currentUrl;\r\n        this._routesParams = {};\r\n        this._routesList = routes || {};\r\n        this._options = options || {};\r\n        this._globalCssInserted = false;\r\n        this._win = window ? window : {};\r\n\r\n        this._navimiFetch = services.navimiFetch;\r\n        this._navimiCSSs = services.navimiCSSs;\r\n        this._navimiJSs = services.navimiJSs;\r\n        this._navimiTemplates = services.navimiTemplates;\r\n        this._navimiMiddlewares = services.navimiMiddlewares;\r\n        this._navimiHot = services.navimiHot;\r\n        this._navimiHelpers = services.navimiHelpers;\r\n\r\n        this._win.addEventListener('popstate', () => {\r\n            this._initRoute();\r\n        });\r\n\r\n        this._win.navigateTo = this._navigateTo;\r\n\r\n        //add middlewares\r\n        this._navimiMiddlewares.addMiddlewares(this._options.middlewares);\r\n\r\n        (async () => {\r\n            await this._init();\r\n        })();\r\n\r\n        this._initRoute();\r\n\r\n        if (this._options.hot) {\r\n            this._initHot();\r\n        }\r\n    }\r\n\r\n    private _init(): Promise<void | [void, void | void[]]> {\r\n        if (this._options.globalCssUrl || this._options.globalTemplatesUrl) {\r\n\r\n            return Promise.all([\r\n                this._navimiCSSs.fetchCss(undefined, this._options.globalCssUrl),\r\n                this._navimiTemplates.fetchTemplate(undefined, this._options.globalTemplatesUrl),\r\n            ]).catch(this._reportError);\r\n\r\n        }\r\n    }\r\n\r\n    private _initHot(): void {\r\n        //removeIf(minify)\r\n        this._navimiHot.init(\r\n            this._navimiCSSs,\r\n            this._navimiJSs,\r\n            this._navimiTemplates,\r\n            () => this._initRoute(undefined, undefined, true),\r\n        );\r\n        setTimeout(this._navimiHot.openHotWs, 1000, this._options.hot);\r\n        //endRemoveIf(minify)\r\n    }\r\n\r\n    private _navigateTo = (url: string, params?: Record<string, unknown>): void => {\r\n        this._initRoute(url, params);\r\n    };\r\n\r\n    private _reportError = (error: Error): void => {\r\n        if (this._options.onError) {\r\n            this._options.onError(error);\r\n            return;\r\n        }\r\n        console.error(error);\r\n    }\r\n\r\n    private _waitForAssets = (callId: number): Promise<void> => {\r\n        const css = this._options.globalCssUrl;\r\n        const template = this._options.globalTemplatesUrl;\r\n        if (!css && !template) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return new Promise<void>(resolve => {\r\n            const loadInterval = setInterval(() => {\r\n                let allLoaded = true;\r\n                if ((css && !this._navimiCSSs.isCssLoaded(css)) ||\r\n                    (template && !this._navimiTemplates.isTemplateLoaded(template))) {\r\n                    allLoaded = false;\r\n                }\r\n\r\n                //check if any load error occured\r\n                const errors = this._navimiFetch.getErrors(css) ||\r\n                    this._navimiFetch.getErrors(template);\r\n\r\n                if (errors || allLoaded || callId < this._callId) {\r\n                    clearInterval(loadInterval);\r\n                    return resolve();\r\n                }\r\n\r\n            }, 10);\r\n        });\r\n    };\r\n\r\n    private _initRoute = async (urlToGo?: string, navParams?: Record<string, unknown>, force?: boolean): Promise<void> => {\r\n        try {\r\n\r\n            const url = this._navimiHelpers.removeHash(urlToGo || this._navimiHelpers.getUrl());\r\n\r\n            if (!force) {\r\n                if (this._currentUrl === url) {\r\n                    return;\r\n                }\r\n                this._abortController && this._abortController.abort();\r\n                this._abortController = window['AbortController'] ? new AbortController() : undefined;\r\n            }\r\n\r\n            const callId = ++this._callId;\r\n            const pushState = urlToGo !== undefined;\r\n\r\n            const { routeItem, params } = this._navimiHelpers.getRouteAndParams(url, this._routesList);\r\n\r\n            const routeParams: INavimi_Context = {\r\n                url,\r\n                routeItem,\r\n                params,\r\n                ...(navParams ? navParams : {}),\r\n            };\r\n\r\n            if (!force) {\r\n                if (this._options.onBeforeRoute) {\r\n                    const shouldContinue = await this._options.onBeforeRoute(routeParams, this._navigateTo);\r\n                    if (shouldContinue === false) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                if (this._currentJSUrl) {\r\n                    const currentRoute = this._navimiJSs.getInstance(this._currentJSUrl);\r\n\r\n                    if (currentRoute) {\r\n                        const onBeforeLeave = currentRoute.onBeforeLeave;\r\n    \r\n                        if (onBeforeLeave) {\r\n                            const shouldContinue = onBeforeLeave(routeParams);\r\n                            if (shouldContinue === false) {\r\n                                if (!pushState) {\r\n                                    history.forward();\r\n                                }\r\n                                return;\r\n                            }\r\n                        }\r\n    \r\n                        currentRoute.onLeave && currentRoute.onLeave();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!routeItem) {\r\n                callId === this._callId && this._reportError(new Error('No route match for url: ' + url));\r\n                return;\r\n            }\r\n\r\n            await this._navimiMiddlewares.executeMiddlewares(this._abortController, routeParams, (url, params) => {\r\n                this._initRoute(url, params, true);\r\n            }).catch(this._reportError);\r\n\r\n            if (callId < this._callId) {\r\n                //removeIf(minify)\r\n                console.warn('Navimi: A middleware has exited or errored.');\r\n                //endRemoveIf(minify)\r\n                return;\r\n            }\r\n\r\n            this._currentUrl = url;\r\n\r\n            const { title, jsUrl, cssUrl, templatesUrl, services, components } = routeItem || {};\r\n\r\n            if (!jsUrl && !templatesUrl) {\r\n                throw new Error('The route must define the \\'jsUrl\\' or \\'templatesUrl\\'!');\r\n            }\r\n\r\n            if (jsUrl) {\r\n                this._currentJSUrl = jsUrl;\r\n                this._routesParams[jsUrl] = routeParams;\r\n            }\r\n\r\n            if (pushState) {\r\n                if (navParams && navParams.replaceUrl) {\r\n                    history.replaceState(null, null, urlToGo);\r\n                } else {\r\n                    history.pushState(null, null, urlToGo);\r\n                }\r\n            }\r\n\r\n            // load all (css, templates and js) from the route in parallel\r\n            await Promise.all([\r\n                this._navimiJSs.loadServices(this._abortController, jsUrl || url, services),\r\n                this._navimiJSs.loadComponents(this._abortController, jsUrl || url, components),\r\n                this._navimiCSSs.fetchCss(this._abortController, cssUrl),\r\n                this._navimiTemplates.fetchTemplate(this._abortController, templatesUrl),\r\n                (jsUrl && this._navimiJSs.fetchJS(this._abortController, [jsUrl], 'route'))\r\n            ]).catch(this._reportError);\r\n\r\n            //wait global css and template to load, if any\r\n            await this._waitForAssets(callId);\r\n\r\n            this._navimiHelpers.setTitle(title);\r\n\r\n            if (!this._globalCssInserted) {\r\n                this._globalCssInserted = true;\r\n                this._navimiCSSs.insertCss(this._options.globalCssUrl, 'globalCss')\r\n            }\r\n\r\n            if (jsUrl) {\r\n                await this._navimiJSs.initRoute(jsUrl, this._routesParams[jsUrl]);\r\n            } else {\r\n                const template = this._navimiTemplates.getTemplate(templatesUrl) as string;\r\n                const body = document.querySelector('body');\r\n                if (template && body) {\r\n                    body.innerHTML = template;\r\n                }\r\n            }\r\n\r\n            if (callId === this._callId) {\r\n                this._navimiHelpers.setNavimiLinks();\r\n                this._navimiCSSs.insertCss(cssUrl, 'routeCss');\r\n\r\n                this._options.onAfterRoute &&\r\n                    this._options.onAfterRoute(routeParams, this._navigateTo);\r\n            }\r\n            \r\n        } catch (ex) {\r\n            this._reportError(ex);\r\n        }\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default __Navimi_Core;\r\n","import { INavimi_Fetch } from './@types/INavimi_Fetch';\r\nimport { INavimi_Options } from './@types/Navimi';\r\n\r\nclass __Navimi_Fetch implements INavimi_Fetch {\r\n\r\n    private _bustCache: string;\r\n    private loadErrors: Record<string, string> = {};\r\n\r\n    public init = (options: INavimi_Options): void => {\r\n        this._bustCache = options.bustCache;\r\n    };\r\n\r\n    public getErrors = (url: string): string => {\r\n        return this.loadErrors[url];\r\n    };\r\n\r\n    public fetchFile = (url: string, options?: RequestInit): Promise<string> => {\r\n        return new Promise((resolve, reject) => {\r\n            delete this.loadErrors[url];\r\n            const requestUrl = url + (this._bustCache ? '?v=' + this._bustCache : '');\r\n            const error = `Could not load the file! - ${url}`;\r\n\r\n            //todo: add retry with options\r\n\r\n            fetch(requestUrl, options)\r\n                .then((data: Response) => {\r\n                    if (!data || !data.ok) {\r\n                        this.loadErrors[url] = error;\r\n                        return reject(error);\r\n                    }\r\n                    data.text().then(resolve);\r\n                })\r\n                .catch(() => {\r\n                    this.loadErrors[url] = error;\r\n                    reject(error);\r\n                });\r\n\r\n        });\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default __Navimi_Fetch;\r\n","import { INavimi_CSSs, INavimi_CssRule } from './@types/INavimi_CSSs';\r\nimport { INavimi_Fetch } from './@types/INavimi_Fetch';\r\nimport { INavimi_HotPayload } from './@types/Navimi';\r\n\r\nclass __Navimi_CSSs implements INavimi_CSSs {\r\n\r\n    private _navimiFetch: INavimi_Fetch;\r\n    private _loadedCsss: Record<string, string> = {};\r\n    private _cssRulesCache: Record<string, string> = {};\r\n    private _cssCount = 0;\r\n    private _cssSheet: CSSStyleSheet;\r\n    private _atomicCssId = '__navimi__cssInJs__';\r\n\r\n    public init(navimiFetch: INavimi_Fetch): void {\r\n        this._navimiFetch = navimiFetch;\r\n        this._addCssToDom('', true, { id: this._atomicCssId });\r\n    }\r\n\r\n    private _replaceCss = (cssCode: string, url: string): void => {\r\n        const oldTag = document.querySelector(`[cssUrl='${url}']`);\r\n        if (!oldTag) {\r\n            return;\r\n        }\r\n        oldTag.innerHTML = cssCode;\r\n    };\r\n\r\n    private _insertCssRule = ({ className, child, media, cssRule }: INavimi_CssRule): void => {\r\n        if (!this._cssSheet) {\r\n            const style = document.querySelector(`style[id=${this._atomicCssId}]`) as HTMLStyleElement;\r\n            // @ts-ignore\r\n            this._cssSheet = style.sheet;\r\n        }\r\n        const rule = `.${`${className}${child}`}{${cssRule.join(';')}}`;\r\n        this._cssSheet.insertRule(media ? `${media}{${rule}}` : rule, this._cssSheet.cssRules.length);\r\n    };\r\n\r\n    private _addCssToDom = (cssCode: string, prepend?: boolean, props?: Record<string, string>): void => {\r\n        if (!document) return;\r\n        const style = document.createElement('style');\r\n        style.innerHTML = cssCode;\r\n        props && Object.entries(props).forEach(([key, value]) => {\r\n            style.setAttribute(key, value);\r\n        });\r\n        const head = document.getElementsByTagName('head')[0];\r\n        const target = (head || document.body);\r\n        prepend ? target.insertBefore(style, target.firstChild) : target.appendChild(style);\r\n    };\r\n\r\n    private _parseCssRules = (obj: object, child = '', media = ''): INavimi_CssRule[] => {\r\n        return Object.entries(obj).reduce((rules, [key, value]) => {\r\n            if (value && typeof value === 'object') {\r\n                const _media = /^@/.test(key) ? key : null\r\n                const _child = _media ? child : child + key.replace(/&/g, '')\r\n                return rules.concat(this._parseCssRules(value, _child, _media || media));\r\n            }\r\n            return rules.concat({ media, child, cssRule: [`${key}:${value}`] });\r\n        }, []);\r\n    }\r\n\r\n    public isCssLoaded = (url: string): boolean => {\r\n        return this._loadedCsss[url] !== undefined;\r\n    };\r\n\r\n    public fetchCss = (abortController: AbortController, url: string): Promise<void> => {\r\n        if (!url || this._loadedCsss[url]) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this._navimiFetch.fetchFile(url, {\r\n            headers: {\r\n                Accept: 'text/css'\r\n            },\r\n            signal: abortController ? abortController.signal : undefined\r\n        }).then(cssCode => {\r\n            this._loadedCsss[url] = cssCode;\r\n        })\r\n\r\n    };\r\n\r\n    public insertCss = (url: string, type: string, prepend?: boolean): void => {\r\n        if (type === 'routeCss') {\r\n            const oldRouteTag = document.querySelector(`[cssType='${type}']`);\r\n            if (oldRouteTag) {\r\n                if (oldRouteTag.getAttribute('cssUrl') === url) {\r\n                    return;\r\n                }\r\n                oldRouteTag.remove();\r\n            }\r\n        }\r\n\r\n        //avoid reinserting the same css\r\n        if (document.querySelector(`[cssUrl='${url}']`)) {\r\n            return;\r\n        }\r\n\r\n        const cssCode = this._loadedCsss[url];\r\n        if (!cssCode) {\r\n            return;\r\n        }\r\n\r\n        this._addCssToDom(cssCode, prepend, { cssUrl: url, cssType: type });\r\n    };\r\n\r\n    public style = (...styles: object[]): string => {\r\n        return styles.map(style => this._parseCssRules(style).map(rule => {\r\n            const cacheKey = JSON.stringify(rule);\r\n            if (this._cssRulesCache[cacheKey]) {\r\n                return this._cssRulesCache[cacheKey];\r\n            }\r\n            const className = `__navimi_${this._cssCount++}`;\r\n            this._insertCssRule({ ...rule, className });\r\n            this._cssRulesCache[cacheKey] = className;\r\n            return className;\r\n        }).join(' ')).join('');\r\n    }\r\n\r\n    //removeIf(minify)\r\n    public digestHot = ({ filePath, data }: INavimi_HotPayload): Promise<void> => {\r\n\r\n        if (!this.isCssLoaded(filePath)) {\r\n            return Promise.reject();\r\n        }\r\n\r\n        this._loadedCsss[filePath] = data;\r\n\r\n        this._replaceCss(data, filePath);\r\n\r\n        console.log(`${filePath} updated.`);\r\n\r\n        return Promise.resolve();\r\n\r\n    };\r\n    //endRemoveIf(minify)\r\n\r\n\r\n}\r\n\r\nexport default __Navimi_CSSs;\r\n","import { INavimi_Components } from './@types/INavimi_Components';\r\nimport { INavimi_CSSs } from './@types/INavimi_CSSs';\r\nimport { INavimi_Fetch } from './@types/INavimi_Fetch';\r\nimport { INavimi_Helpers } from './@types/INavimi_Helpers';\r\nimport { INavimi_JSs, jsType } from './@types/INavimi_JSs';\r\nimport { INavimi_State } from './@types/INavimi_State';\r\nimport { INavimi_Templates } from './@types/INavimi_Templates';\r\nimport { \r\n    INavimi_Options, \r\n    INavimi_Library, \r\n    INavimi_Functions, \r\n    INavimi_HotPayload \r\n} from './@types/Navimi';\r\n\r\nclass __Navimi_JSs implements INavimi_JSs {\r\n\r\n    private _navimiLoaderNS = '__navimiLoader';\r\n    private _callBackNS = '_jsLoaderCallback';\r\n    private _promiseNS = '_promise_';\r\n\r\n    private _loadedJSs: Record<string, string> = {};\r\n    private _jsType: Record<string, jsType> = {};\r\n    private _jsInstances: Record<string, InstanceType<any>> = {};\r\n    private _jsDepMap: Record<string, Record<string, boolean>> = {};\r\n    private _servicesList: Record<string, string[]> = {};\r\n\r\n    private _navimiLoader: any;\r\n    private _options: INavimi_Options;\r\n    private _uidCounter = 0;\r\n\r\n    private _navimiHelpers: INavimi_Helpers;\r\n    private _navimiFetch: INavimi_Fetch;\r\n    private _navimiCSSs: INavimi_CSSs;\r\n    private _navimiTemplates: INavimi_Templates;\r\n    private _navimiState: INavimi_State;\r\n    private _navimiComponents: INavimi_Components;\r\n\r\n    public init(\r\n        navimiHelpers: INavimi_Helpers,\r\n        navimiFetch: INavimi_Fetch,\r\n        navimiCSSs: INavimi_CSSs,\r\n        navimiTemplates: INavimi_Templates,\r\n        navimiState: INavimi_State,\r\n        navimiComponents: INavimi_Components,\r\n        options: INavimi_Options\r\n    ) {\r\n\r\n        this._navimiHelpers = navimiHelpers;\r\n        this._navimiFetch = navimiFetch;\r\n        this._navimiCSSs = navimiCSSs;\r\n        this._navimiTemplates = navimiTemplates;\r\n        this._navimiState = navimiState;\r\n        this._navimiComponents = navimiComponents;\r\n        this._options = options;\r\n        this._uidCounter = 0;\r\n\r\n        // @ts-ignore\r\n        this._navimiLoader = window[this._navimiLoaderNS] = {\r\n            [this._callBackNS]: this._instantiateJS, // initialize JS loader namespace\r\n        };\r\n    }\r\n\r\n    private _resolvePromise = (value: unknown, jsUrl: string): void => {\r\n        this._navimiLoader[this._promiseNS + jsUrl](value);\r\n    };\r\n\r\n    private _rejectPromise = (reason: any, jsUrl: string): void => {\r\n        this._navimiLoader[this._promiseNS + jsUrl + '_reject'](reason);\r\n    };\r\n\r\n    private _awaitJS = (jsUrl: string) => {\r\n        return new Promise<InstanceType<any>>((resolve, reject) => {\r\n\r\n            const loadInterval = setInterval(() => {\r\n\r\n                if (this._jsInstances[jsUrl]) {\r\n                    clearInterval(loadInterval);\r\n                    return resolve(this._jsInstances[jsUrl]);\r\n                }\r\n\r\n                const type = this._jsType[jsUrl];\r\n                if ((type === 'library' || type === 'module') && this.isJsLoaded(jsUrl)) {\r\n                    clearInterval(loadInterval);\r\n                    return resolve('');\r\n                }\r\n\r\n                const error = this._navimiFetch.getErrors(jsUrl);\r\n                if (error) {\r\n                    clearInterval(loadInterval);\r\n                    return reject(error);\r\n                }\r\n\r\n            }, 10);\r\n\r\n        });\r\n    };\r\n\r\n    private _addLibrary = async (library: string | string[] | INavimi_Library[]): Promise<void> => {\r\n\r\n        const arr: unknown[] = Array.isArray(library) ? library : [library];\r\n\r\n        if (arr.length > 0) {\r\n\r\n            const libraries: INavimi_Library[] = arr.map(lib => {\r\n                if (typeof lib === 'string') {\r\n                    const type = lib.split('.').pop();\r\n                    return {\r\n                        url: lib,\r\n                        type: type.toLowerCase(),\r\n                    } as INavimi_Library;\r\n                } else {\r\n                    return lib as INavimi_Library;\r\n                }\r\n            });\r\n\r\n            await Promise.all(libraries.map(obj => {\r\n                const type = obj.type.toLowerCase();\r\n                if (type === 'css') {\r\n                    return this._navimiCSSs.fetchCss(undefined, obj.url).then(() => {\r\n                        return this._navimiCSSs.insertCss(obj.url, 'library', true);\r\n                    });\r\n                } else {\r\n                    return this.fetchJS(undefined, [obj.url], type === 'module' ? 'module' : 'library');\r\n                }\r\n            })).catch(ex => {\r\n                throw new Error(ex)\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    private _fetch = async (abortController: AbortController, url: string, type: jsType): Promise<void> => {\r\n        let jsCode = '';\r\n        if (this._loadedJSs[url]) {\r\n            jsCode = this._loadedJSs[url];\r\n        } else {\r\n            jsCode = await this._navimiFetch.fetchFile(url, {\r\n                headers: {\r\n                    Accept: 'application/javascript'\r\n                },\r\n                signal: abortController ? abortController.signal : undefined\r\n            });\r\n        }\r\n\r\n        this._jsType[url] = type;\r\n        this._insertJS(url, jsCode.replace(/^\\s+|\\s+$/g, ''), type);\r\n    };\r\n\r\n    private _insertJS = (url: string, jsCode: string, type: jsType): void => {\r\n        const jsHtmlBody = (type === 'module' || type === 'library') ? jsCode :\r\n            `((loader, url, type) => { loader(url, type, (() => { return ${jsCode}\r\n})())})(${this._navimiLoaderNS}.${this._callBackNS}, \"${url}\", \"${type}\")`;\r\n\r\n        this._loadedJSs[url] = jsCode;\r\n\r\n        const oldTag = document.querySelector(`[jsUrl='${url}']`);\r\n        if (oldTag) {\r\n            oldTag.remove();\r\n        }\r\n\r\n        const script: HTMLScriptElement = document.createElement('script');\r\n        script.type = type === 'module' ? 'module' : 'text/javascript';\r\n        script.innerHTML = jsHtmlBody;\r\n        script.setAttribute('jsUrl', url);\r\n        const head = document.getElementsByTagName('head')[0];\r\n        (head || document.body).appendChild(script);\r\n\r\n        if (type === 'module' || type === 'library') {\r\n            this._resolvePromise(true, url); // resolve the promise - script is loaded\r\n        }\r\n    };\r\n\r\n    private _getFunctions = (callerUid: string, jsUrl: string): INavimi_Functions => {\r\n        return Object.freeze({\r\n            addLibrary: this._addLibrary,\r\n            setTitle: this._navimiHelpers.setTitle,\r\n            navigateTo: (window as any).navigateTo,\r\n            getTemplate: this._navimiTemplates.getTemplate,\r\n            fetchJS: (url: string | string[]) => {\r\n                const urls = Array.isArray(url) ? url : [url];\r\n                urls.map(u => {\r\n                    this._jsDepMap[u] = {\r\n                        ...this._jsDepMap[u] || {},\r\n                        [jsUrl]: true\r\n                    };\r\n                });\r\n                return this.fetchJS(undefined, urls, 'javascript');\r\n            },\r\n            fetchTemplate: (url: string | string[]) => {\r\n                return this._navimiTemplates.fetchTemplate(undefined, url);\r\n            },\r\n            style: this._navimiCSSs.style,\r\n            setState: this._navimiState.setState,\r\n            getState: this._navimiState.getState,\r\n            setNavimiLinks: this._navimiHelpers.setNavimiLinks,\r\n            unwatchState: (key: string) => this._navimiState.unwatchState(callerUid, key),\r\n            watchState: (key: string, callback: (state: Record<string, any>) => void) =>\r\n                this._navimiState.watchState(callerUid, key, callback)\r\n        });\r\n    };\r\n\r\n    private _getServices = async (jsUrl: string, JsClass: InstanceType<any>): Promise<Record<string, InstanceType<any>>> => {\r\n\r\n        if (Array.isArray(JsClass)) {\r\n            //add all other elements are expected to be services names\r\n            const services = JsClass.filter(s => typeof s === 'string');\r\n            if (services.length > 0) {\r\n                this.loadServices(undefined, jsUrl, services);\r\n            }\r\n        }\r\n\r\n        //wait for all dependencies to load\r\n        const dependencies = [];\r\n        for (const deps in this._jsDepMap) {\r\n            if (this._jsDepMap[deps][jsUrl]) {\r\n                dependencies.push(deps);\r\n            }\r\n        }\r\n        await Promise.all(dependencies.map(this._awaitJS));\r\n\r\n        //gather required services\r\n        let services: Record<string, InstanceType<any>> = {};\r\n        this._servicesList[jsUrl]?.map((serviceName: string) => {\r\n            services = {\r\n                ...services,\r\n                [serviceName]: this._jsInstances[this._options.services[serviceName]]\r\n            };\r\n        });\r\n\r\n        return Object.freeze(services);\r\n    };\r\n\r\n    private _getClassAndServices = async (jsUrl: string, JsClass: InstanceType<any>): Promise<{\r\n        JsClass: InstanceType<any>,\r\n        services: Record<string, InstanceType<any>>\r\n    }> => {\r\n        let finalClass = JsClass;\r\n\r\n        if (Array.isArray(JsClass)) {\r\n            // the last element is expected to be the component class\r\n            finalClass = JsClass.pop();\r\n        }\r\n\r\n        const services = await this._getServices(jsUrl, JsClass);\r\n\r\n        return { JsClass: finalClass, services };\r\n    };\r\n\r\n    private _buildRoute = async (jsUrl: string, JsClass: InstanceType<any>): Promise<InstanceType<any>> => {\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const jss = this;\r\n\r\n        const { JsClass: routeClass, services } = await this._getClassAndServices(jsUrl, JsClass);\r\n\r\n        const uid = `route:${++this._uidCounter}`;\r\n\r\n        const route = class extends (routeClass) {\r\n\r\n            constructor() {\r\n                const functions = jss._getFunctions(uid, jsUrl);\r\n                super(functions, services);\r\n            }\r\n\r\n            onEnter(params: Record<string, string>): void {\r\n                if (super.onEnter) {\r\n                    super.onEnter(params);\r\n                }\r\n            }\r\n\r\n            onBeforeLeave(params: Record<string, string>): boolean {\r\n                if (super.onBeforeLeave) {\r\n                    return super.onBeforeLeave(params);\r\n                }\r\n                return true;\r\n            }\r\n\r\n            onLeave(): void {\r\n                if (super.onLeave) {\r\n                    super.onLeave();\r\n                }\r\n            }\r\n\r\n            destroy(): void {\r\n                jss._navimiState.unwatchState(uid);\r\n                if (super.destroy) {\r\n                    super.destroy();\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        return new route();\r\n\r\n    };\r\n\r\n    private _buildComponentClass = async (jsUrl: string, JsClass: InstanceType<any>): Promise<InstanceType<any>> => {\r\n\r\n        const componentName = Object.keys(this._options.components)\r\n            .find((name: string) => this._options.components[name] === jsUrl);\r\n\r\n        if (!componentName || !/-/.test(componentName)) {\r\n            return;\r\n        }\r\n\r\n        const { JsClass: componentClass, services } = await this._getClassAndServices(jsUrl, JsClass);\r\n\r\n        return this._navimiComponents.registerComponent(componentName, componentClass, (callerUid: string) => {\r\n            return this._getFunctions(callerUid, jsUrl);\r\n        }, services);\r\n\r\n    };\r\n\r\n    private _instantiateJS = async (\r\n        jsUrl: string,\r\n        type: jsType,\r\n        JsCode: InstanceType<any>): Promise<void> => {\r\n\r\n        try {\r\n\r\n            if (type === 'route' || type === 'component') {\r\n                const instance = type === 'route' ?\r\n                    await this._buildRoute(jsUrl, JsCode) :\r\n                    await this._buildComponentClass(jsUrl, JsCode);\r\n\r\n                //keep this instance to reuse later\r\n                this._jsInstances[jsUrl] = instance;\r\n\r\n                return this._resolvePromise(instance, jsUrl);\r\n            }\r\n\r\n            // for services and javascripts\r\n            this._jsInstances[jsUrl] = JsCode;\r\n            return this._resolvePromise(JsCode, jsUrl);\r\n\r\n        } catch (error) {\r\n            this._rejectPromise(error, jsUrl);\r\n        }\r\n\r\n    };\r\n\r\n    private _isJsLoading = (jsUrl: string): boolean => {\r\n        return this._navimiLoader[this._promiseNS + jsUrl] !== undefined &&\r\n            !this._navimiFetch.getErrors(jsUrl);\r\n    };\r\n\r\n    private _checkDepsUrls = (jsUrl: string, depArray: string[], type: 'services' | 'components'): string[] => {\r\n        const notFound: string[] = [];\r\n        if (!this._servicesList[jsUrl]) {\r\n            this._servicesList[jsUrl] = [];\r\n        }\r\n        const urls = (depArray || []).map(name => {\r\n            //@ts-ignore\r\n            const url: string = this._options[type] && this._options[type][name];\r\n            if (url === undefined) {\r\n                notFound.push(name);\r\n            } else {\r\n                type === 'services' &&\r\n                    this._servicesList[jsUrl].indexOf(name) === -1 &&\r\n                    this._servicesList[jsUrl].push(name);\r\n\r\n                this._jsDepMap[url] = {\r\n                    ...this._jsDepMap[url] || {},\r\n                    [jsUrl]: true\r\n                };\r\n            }\r\n            return url;\r\n        });\r\n\r\n        if (notFound.length > 0) {\r\n            throw new Error(type + ' not defined: ' + notFound.join(', '));\r\n        }\r\n\r\n        return urls;\r\n    };\r\n\r\n    public isJsLoaded = (url: string): boolean => {\r\n        return this._loadedJSs[url] !== undefined;\r\n    };\r\n\r\n    public getInstance = (url: string): InstanceType<any> => {\r\n        return this._jsInstances[url];\r\n    };\r\n\r\n    public fetchJS = (abortController: AbortController, urls: string[], type: jsType): Promise<InstanceType<any> | InstanceType<any>[]> => {\r\n\r\n        const init = (url: string): Promise<InstanceType<any>> => {\r\n            return new Promise<InstanceType<any>>((resolve, reject) => {\r\n\r\n                // return the instance if this js is already loaded\r\n                if (this._jsInstances[url]) {\r\n                    return resolve(this._jsInstances[url]);\r\n                }\r\n\r\n                // stop here if the module or library is already inserted\r\n                if (this._loadedJSs[url] && (type === 'module' || type === 'library')) {\r\n                    return resolve(true);\r\n                }\r\n\r\n                // route repeated calls to an awaiter\r\n                if (this._isJsLoading(url)) {\r\n                    return this._awaitJS(url)\r\n                        .then(resolve)\r\n                        .catch(reject);\r\n                }\r\n\r\n                // let the js resolve the promise itself when it loads (in _insertJS or _instantiateJS)\r\n                this._navimiLoader[this._promiseNS + url] = resolve;\r\n                this._navimiLoader[this._promiseNS + url + '_reject'] = reject;\r\n\r\n                this._fetch(abortController, url, type).catch(reject);\r\n            });\r\n        }\r\n\r\n        return urls.length > 1 ? Promise.all(urls.map(init)) : init(urls[0]);\r\n    };\r\n\r\n    public loadServices = (abortController: AbortController, jsUrl: string, services: string[]): Promise<any[]> => {\r\n\r\n        if (!jsUrl) {\r\n            return;\r\n        }\r\n\r\n        const servicesUrls = this._checkDepsUrls(jsUrl, services, 'services');\r\n\r\n        const promises = servicesUrls.filter(url => url !== undefined)\r\n            .map(url => this.fetchJS(abortController, [url], 'service'));\r\n\r\n        return Promise.all(promises);\r\n    };\r\n\r\n    public loadComponents = (abortController: AbortController, jsUrl: string, components: string[]): Promise<any[]> => {\r\n\r\n        if (!jsUrl) {\r\n            return;\r\n        }\r\n\r\n        const componentsUrls = this._checkDepsUrls(jsUrl, components, 'components');\r\n\r\n        const promises = componentsUrls.filter(url => url !== undefined)\r\n            .map(url => this.fetchJS(abortController, [url], 'component'));\r\n\r\n        return Promise.all(promises);\r\n    };\r\n\r\n    public initRoute = async (jsUrl: string, params: Record<string, any>): Promise<void> => {\r\n\r\n        const jsInstance = this.getInstance(jsUrl);\r\n\r\n        jsInstance && jsInstance.onEnter &&\r\n            await jsInstance.onEnter(params);\r\n\r\n    };\r\n\r\n    //removeIf(minify)\r\n    public digestHot = async ({ filePath, data }: INavimi_HotPayload): Promise<void> => {\r\n\r\n        const destroyed: string[] = [];\r\n\r\n        const destroyDependencies = (url: string): void => {\r\n\r\n            for (const jsUrl in this._jsDepMap[url]) {\r\n\r\n                if (destroyed.indexOf(jsUrl) === -1) {\r\n                    destroyDependencies(jsUrl);\r\n                }\r\n            }\r\n\r\n            destroyed.indexOf(url) === -1 && destroyed.push(url);\r\n            const instance = this.getInstance(url);\r\n            instance && instance.destroy && instance.destroy();\r\n            delete this._navimiLoader[this._promiseNS + url];\r\n            delete this._jsInstances[url];\r\n        }\r\n\r\n        if (!this.isJsLoaded(filePath)) {\r\n            return Promise.reject();\r\n        }\r\n\r\n        const type = this._jsType[filePath];\r\n\r\n        //destroy all instances\r\n        if (type === 'library' || type === 'module') {\r\n            for (const jsUrl in this._jsDepMap) {\r\n                destroyDependencies(jsUrl);\r\n            }\r\n            for (const jsUrl in this._jsInstances) {\r\n                destroyDependencies(jsUrl);\r\n            }\r\n        } else {\r\n            destroyDependencies(filePath);\r\n        }\r\n\r\n        return new Promise<InstanceType<any>>((resolve) => {\r\n            this._navimiLoader[this._promiseNS + filePath] = resolve;\r\n\r\n            this._insertJS(filePath, data.replace(/^\\s+|\\s+$/g, ''), type);\r\n\r\n            console.log(`${filePath} updated.`);\r\n        });\r\n\r\n    };\r\n    //endRemoveIf(minify)\r\n}\r\n\r\nexport default __Navimi_JSs;\r\n","import { INavimi_Fetch } from './@types/INavimi_Fetch';\r\nimport { INavimi_Templates } from './@types/INavimi_Templates';\r\nimport { INavimi_HotPayload } from './@types/Navimi';\r\n\r\nclass __Navimi_Templates implements INavimi_Templates {\r\n\r\n    private _templatesCache: Record<string, string> = {};\r\n    private _loadedTemplates: Record<string, boolean> = {};\r\n    private _navimiFetch: INavimi_Fetch;        \r\n    private _regIni: RegExp;\r\n    private _regEnd: RegExp;\r\n    private _regId: RegExp;\r\n\r\n    public init(navimiFetch: INavimi_Fetch): void {\r\n        this._navimiFetch = navimiFetch;\r\n\r\n        this._regIni = new RegExp('<t ([^>]+)>');\r\n        this._regEnd = new RegExp('</t>');\r\n        this._regId = new RegExp('id=(\"[^\"]+\"|\\'[^\\']+\\')');\r\n    }\r\n\r\n    private loadTemplate = (templateCode: string, url?: string): void => {\r\n        let tempCode = templateCode;\r\n\r\n        if (!this._regIni.exec(tempCode)) {\r\n            this._templatesCache[url] = tempCode;\r\n            return;\r\n        }\r\n\r\n        while (templateCode && templateCode.length > 0) {\r\n            const iniTemplate = this._regIni.exec(tempCode);\r\n\r\n            if (!iniTemplate || iniTemplate.length === 0) {\r\n                break;\r\n            }\r\n\r\n            const regIdRes = this._regId.exec(iniTemplate[1]);\r\n            const idTemplate = regIdRes.length > 0 && regIdRes[1].slice(1, -1);\r\n            tempCode = tempCode.substring(iniTemplate.index + iniTemplate[0].length);\r\n            const endTemplate = this._regEnd.exec(tempCode);\r\n\r\n            if (!idTemplate || !endTemplate || endTemplate.length === 0) {\r\n                break;\r\n            }\r\n\r\n            this._templatesCache[idTemplate] = tempCode.substring(0, endTemplate.index);\r\n        }\r\n    };\r\n\r\n    public isTemplateLoaded = (url: string): boolean => {\r\n        return this._loadedTemplates[url] !== undefined;\r\n    };\r\n\r\n    public getTemplate = (templateId: string | string[]): string | string[] => {\r\n        const ids = Array.isArray(templateId) ? templateId : [templateId];\r\n        const arrTemplates = ids.map(id => this._templatesCache[id]);\r\n        return arrTemplates.length > 1 ? arrTemplates : arrTemplates[0];\r\n    };\r\n\r\n    public fetchTemplate = (abortController: AbortController, url: string | string[]): Promise<void | void[]> => {\r\n        const init = (url: string): Promise<void> => {\r\n            if (!url || this._loadedTemplates[url]) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            return this._navimiFetch.fetchFile(url, {\r\n                headers: {\r\n                    Accept: 'text/html'\r\n                },\r\n                signal: abortController ? abortController.signal : undefined\r\n            }).then(templateCode => {\r\n                this.loadTemplate(templateCode, url);\r\n                this._loadedTemplates[url] = true;\r\n            });\r\n        };\r\n\r\n        const urls: string[] = Array.isArray(url) ? url : [url];\r\n        return urls.length > 1 ? Promise.all(urls.map(init)) : init(urls[0]);\r\n    };\r\n\r\n    //removeIf(minify)\r\n    public digestHot = ({filePath, data}: INavimi_HotPayload): Promise<void> => {\r\n        \r\n        if (!this.isTemplateLoaded(filePath)) {\r\n            return Promise.reject();\r\n        }\r\n        \r\n        this.loadTemplate(data, filePath);\r\n\r\n        console.log(`${filePath} updated.`);\r\n\r\n        return Promise.resolve();\r\n    };\r\n    //endRemoveIf(minify)\r\n\r\n}\r\n\r\nexport default __Navimi_Templates;\r\n","import { INavimi_Middlewares } from './@types/INavimi_Middleware';\r\nimport { \r\n    INavimi_Context, \r\n    INavimi_Middleware \r\n} from './@types/Navimi';\r\n\r\nclass __Navimi_Middlewares implements INavimi_Middlewares {\r\n\r\n    private _middlewareStack: INavimi_Middleware[] = [];\r\n\r\n    public addMiddlewares = (middlewares: INavimi_Middleware[]): void => {\r\n        if (Array.isArray(middlewares)) {\r\n            this._middlewareStack.push(...middlewares.filter(mdw => mdw !== undefined));\r\n        }\r\n    };\r\n\r\n    public executeMiddlewares = async (abortController: AbortController, context: INavimi_Context, callback: (url: string, params: Record<string, any>) => void): Promise<any> => {\r\n        let prevIndex = -1;\r\n        const runner = async (resolve: (value?: unknown) => void, reject: (reason?: any) => void, index = 0): Promise<void> => {\r\n            //removeIf(minify)\r\n            if (index === prevIndex) {\r\n                console.warn('next() called multiple times');\r\n            }\r\n            //endRemoveIf(minify)\r\n            prevIndex = index;\r\n            const middleware = this._middlewareStack[index];\r\n            if (middleware) {\r\n                try {\r\n                    await middleware(context, async (url: string, params?: Record<string, any>) => {\r\n                        if (abortController && abortController.signal.aborted) {\r\n                            resolve();\r\n                        } else {\r\n                            if (!url) {\r\n                                await runner(resolve, reject, index + 1);\r\n                            } else {\r\n                                callback(url, params);\r\n                                resolve();\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (error) {\r\n                    reject(error);\r\n                }\r\n            } else {\r\n                resolve();\r\n            }\r\n        }\r\n        return await new Promise(runner);\r\n    };\r\n\r\n}\r\n\r\nexport default __Navimi_Middlewares;\r\n","import { INavimi_Helpers } from './@types/INavimi_Helpers';\r\nimport { INavimi_State } from './@types/INavimi_State';\r\n\r\nclass __Navimi_State implements INavimi_State {\r\n\r\n    private _state: Record<string, any> = {};\r\n    private _stateWatchers: Record<string, Record<string, Array<(state: any) => void>>> = {};\r\n    private _prevState: Record<string, any> = {};\r\n    private _stateDiff: Record<string, boolean> = {};\r\n    private _navimiHelpers: INavimi_Helpers;\r\n\r\n    private _invokeStateWatchers: () => void;\r\n\r\n    public init(navimiHelpers: INavimi_Helpers): void {\r\n        this._navimiHelpers = navimiHelpers;\r\n\r\n        // debounce this so we fire in batches\r\n        this._invokeStateWatchers = navimiHelpers.debounce((): void => {\r\n            const keys = Object.keys(this._stateWatchers);\r\n            const diff = Object.keys(this._stateDiff);\r\n            this._stateDiff = {};\r\n            // fire deep keys first\r\n            keys.filter(key => diff.indexOf(key) >= 0).sort((a, b) => b.length - a.length).map(key => {\r\n                Object.keys(this._stateWatchers[key]).map((jsUrl: string) => {\r\n                    const state = this.getState(key);\r\n                    this._stateWatchers[key][jsUrl] &&\r\n                        this._stateWatchers[key][jsUrl].map(cb => cb && cb(state));\r\n                });\r\n            });\r\n        }, 10);\r\n    }\r\n\r\n    private _getStateDiff = (keys: string[]): void => {\r\n        //start with longer keys to go deep first\r\n        keys.sort((a, b) => b.length - a.length).map(key => {\r\n            if (!this._stateDiff[key]) {\r\n                const sOld = this._navimiHelpers.stringify(this.getState(key, this._prevState) || '');\r\n                const sNew = this._navimiHelpers.stringify(this.getState(key, this._state) || '');\r\n                if (sOld !== sNew) {\r\n                    this._stateDiff[key] = true;\r\n                    //set upper keys as changed so we don't test them again\r\n                    keys.map(upperKey => {\r\n                        if (key !== upperKey && key.indexOf(upperKey) === 0) {\r\n                            this._stateDiff[upperKey] = true;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    private _mergeState = (state: any, newState: any): void => {\r\n        if (newState instanceof Error) {\r\n            newState = {\r\n                ...newState,\r\n                message: newState.message,\r\n                stack: newState.stack,\r\n            };\r\n        }\r\n        const isObject = (item: any): boolean =>\r\n            item && typeof item === 'object' && !Array.isArray(item) && item !== null;\r\n        if (isObject(state) && isObject(newState)) {\r\n            for (const key in newState) {\r\n                if (isObject(newState[key])) {\r\n                    !state[key] && Object.assign(state, { [key]: {} });\r\n                    this._mergeState(state[key], newState[key]);\r\n                } else {\r\n                    Object.assign(state, { [key]: newState[key] });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    public setState = (newState: Record<string, any>): void => {\r\n        const observedKeys = Object.keys(this._stateWatchers);\r\n        if (observedKeys.length > 0) {\r\n            this._prevState = this._navimiHelpers.cloneObject(this._state);\r\n        }\r\n        this._mergeState(this._state, newState);\r\n        if (observedKeys.length > 0) {\r\n            this._getStateDiff(observedKeys);\r\n            this._invokeStateWatchers();\r\n        }\r\n    };\r\n\r\n    public getState = (key?: string, _state?: any): Record<string, any> => {\r\n        const state = key ?\r\n            key.split('.')\r\n                .reduce((v, k) => (v && v[k]) || undefined, _state || this._state) :\r\n            _state || this._state;\r\n        return state ? Object.freeze(this._navimiHelpers.cloneObject(state)) : undefined;\r\n    };\r\n\r\n    public watchState = (callerUid: string, key: string, callback: (state: any) => void): void => {\r\n        if (!key || !callback) {\r\n            return;\r\n        }\r\n        if (!this._stateWatchers[key]) {\r\n            this._stateWatchers[key] = {};\r\n        }\r\n        this._stateWatchers[key] = {\r\n            ...this._stateWatchers[key],\r\n            [callerUid]: [\r\n                ...(this._stateWatchers[key][callerUid] || []),\r\n                callback\r\n            ]\r\n        };\r\n    };\r\n\r\n    public unwatchState = (callerUid: string, key?: string | string[]): void => {\r\n        const remove = (key: string): void => {\r\n            this._stateWatchers[key][callerUid] = undefined;\r\n            delete this._stateWatchers[key][callerUid];\r\n            Object.keys(this._stateWatchers[key]).length === 0 &&\r\n                delete this._stateWatchers[key];\r\n        }\r\n\r\n        if (key) {\r\n            const keys = Array.isArray(key) ? key : [key];\r\n            keys.map(id => {\r\n                !this._stateWatchers[id] && (this._stateWatchers[id] = {});\r\n                remove(id);\r\n            });\r\n            return;\r\n        }\r\n\r\n        Object.keys(this._stateWatchers).map(remove);\r\n    };\r\n\r\n    public clear = (key?: string | string[]): void => {\r\n        const keys = Array.isArray(key) ? key : [key ? key : ''];\r\n\r\n        keys.map(id => {\r\n            const state = id ?\r\n            id.split('.')\r\n                    .reduce((v, k) => (v && v[k]) || undefined, this._state) : \r\n                this._state;\r\n\r\n            if (state instanceof Object) {\r\n                Object.keys(state).map(sk => {\r\n                    if (state[sk] instanceof Object && \r\n                        Object.keys(state[sk]).length > 0) {\r\n                        this.clear((id ? id + '.' : '') + sk);\r\n                    }\r\n                    delete state[sk];\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default __Navimi_State;\r\n","import { INavimi_CSSs } from './@types/INavimi_CSSs';\r\nimport { INavimi_Hot } from './@types/INavimi_Hot';\r\nimport { INavimi_JSs } from './@types/INavimi_JSs';\r\nimport { INavimi_Templates } from './@types/INavimi_Templates';\r\nimport { INavimi_HotPayload } from './@types/Navimi';\r\n\r\nclass __Navimi_Hot implements INavimi_Hot {\r\n    private _wsHotClient: WebSocket;\r\n    private _navimiCSSs: INavimi_CSSs;\r\n    private _navimiJSs: INavimi_JSs;\r\n    private _navimiTemplates: INavimi_Templates;\r\n    private _initRouteFunc: () => void;\r\n    \r\n    public init(navimiCSSs: INavimi_CSSs, navimiJSs: INavimi_JSs, navimiTemplates: INavimi_Templates, initRoute: () => void): void {\r\n        //removeIf(minify)\r\n        this._navimiCSSs = navimiCSSs;\r\n        this._navimiJSs = navimiJSs;\r\n        this._navimiTemplates = navimiTemplates;\r\n        this._initRouteFunc = initRoute;\r\n        //endRemoveIf(minify)\r\n    }\r\n    \r\n    //removeIf(minify)\r\n    public openHotWs = (hotOption: number | boolean): void => {\r\n        try {\r\n            if (!('WebSocket' in window)) {\r\n                console.error('Websocket is not supported by your browser!');\r\n                return;\r\n            }\r\n\r\n            console.warn('Connecting HOT...');\r\n            const port = hotOption === true ? 8080 : hotOption;\r\n            this._wsHotClient = null;\r\n            this._wsHotClient = new WebSocket(`ws://localhost:${port}`);\r\n            this._wsHotClient.addEventListener('message', async (e: any) => {\r\n                try {\r\n                    const payload: INavimi_HotPayload = JSON.parse(e.data || '');\r\n                    if (payload.message) {\r\n                        console.warn(payload.message);\r\n                        return;\r\n                    }\r\n                    if (payload.filePath) {\r\n                        await this._digestHot(payload);\r\n                    }\r\n                } catch (ex) {\r\n                    console.error('Could not parse HOT message:', ex);\r\n                }\r\n            });\r\n            this._wsHotClient.onclose = () => {\r\n                console.warn('HOT Connection Closed!');\r\n                setTimeout(this.openHotWs, 5000, hotOption);\r\n            };\r\n        } catch (ex) {\r\n            console.error(ex);\r\n        }\r\n    };\r\n    //endRemoveIf(minify)\r\n    \r\n    //removeIf(minify)\r\n    private _digestHot = async (payload: INavimi_HotPayload): Promise<void> => {\r\n        try {\r\n            payload.filePath = payload.filePath.replace(/\\\\/g, '/');\r\n            const fileType = payload.filePath.split('.').pop()?.toLocaleLowerCase();\r\n\r\n            switch (fileType) {\r\n                case 'css':\r\n                    await this._navimiCSSs.digestHot(payload)\r\n                    .catch(() => {/*ignore*/});\r\n                    break;\r\n\r\n                case 'html':\r\n                case 'htm':\r\n                    await this._navimiTemplates.digestHot(payload)\r\n                        .then(() => this._initRouteFunc())\r\n                        .catch(() => {/*ignore*/});\r\n                    break;\r\n\r\n                case 'js':\r\n                    this._navimiJSs.digestHot(payload)\r\n                    .then(() => this._initRouteFunc())\r\n                    .catch(() => {/*ignore*/});\r\n                    break;\r\n\r\n                case 'gif':\r\n                case 'jpg':\r\n                case 'jpeg':\r\n                case 'png':\r\n                case 'svg':\r\n                    this._initRouteFunc();\r\n                    break;\r\n            }\r\n        } catch (ex) {\r\n            console.error('Could not digest HOT payload: ', ex);\r\n        }\r\n    };\r\n    //endRemoveIf(minify)\r\n}\r\n\r\nexport default __Navimi_Hot;\r\n\r\n","import { INavimi_Helpers } from './@types/INavimi_Helpers';\r\nimport { INavimi_Route } from './@types/Navimi';\r\n\r\nclass __Navimi_Helpers implements INavimi_Helpers {\r\n\r\n    private parseQuery = (queryString: string): Record<string, string> => {\r\n        const query: Record<string, string> = {};\r\n        queryString.split('&').map(pair => {\r\n            const kv = pair.split('=');\r\n            query[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1] || '');\r\n        });\r\n        return query;\r\n    };\r\n\r\n    private splitPath = (path: string): string[] => {\r\n        if (!path) {\r\n            return [];\r\n        }\r\n\r\n        const queryPos = path.indexOf('?');\r\n        path = queryPos >= 0 ? path.substring(0, queryPos) : path;\r\n\r\n        return path.split('/').filter(p => p.length > 0);\r\n    };\r\n\r\n    private parsePath = (urlPath: string, urlPattern: string): Record<string, unknown> => {\r\n        const queryPos = urlPath.indexOf('?');\r\n        const query = queryPos > 0 ? urlPath.substring(queryPos + 1, urlPath.length) : '';\r\n        const path = this.splitPath(urlPath);\r\n        const pattern = this.splitPath(urlPattern);\r\n\r\n        let params: Record<string, unknown> = {};\r\n\r\n        if (queryPos > 0) {\r\n            params = {\r\n                queryString: this.parseQuery(query)\r\n            };\r\n        }\r\n\r\n        for (let i = 0; i < pattern.length; i++) {\r\n            if (pattern[i].charAt(0) === ':') {\r\n                const name = pattern[i].slice(1);\r\n                if (path.length <= i) {\r\n                    return null;\r\n                }\r\n                params[name] = decodeURIComponent(path[i]);\r\n            }\r\n            else {\r\n                if (!path[i] || pattern[i].toLowerCase() !== path[i].toLowerCase())\r\n                    return null;\r\n            }\r\n        }\r\n\r\n        return params;\r\n    };\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public debounce = (task: Function, wait: number): () => void => {\r\n        let timeout: ReturnType<typeof setTimeout>;\r\n\r\n        return function (...args) {\r\n            const func = (): void => {\r\n                timeout = null;\r\n                task.apply(this, args);\r\n            };\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(func, wait);\r\n        };\r\n    };\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public throttle = (task: Function, wait: number, context: unknown): () => void => {\r\n        let timeout: ReturnType<typeof setTimeout>;\r\n        let lastTime: number;\r\n\r\n        return function (...args) {\r\n            const now = Date.now();\r\n\r\n            if (lastTime && now < lastTime + wait) {\r\n                clearTimeout(timeout);\r\n                timeout = setTimeout(() => {\r\n                    lastTime = now;\r\n                    task.apply(context, args);\r\n                }, wait);\r\n            } else {\r\n                lastTime = now;\r\n                task.apply(context, args);\r\n            }\r\n        };\r\n    };\r\n\r\n    public getUrl = (): string => {\r\n        const location = document.location;\r\n        const matches = location.toString().match(/^[^#]*(#.+)$/);\r\n        const hash = matches ? matches[1] : '';\r\n\r\n        return [location.pathname, location.search, hash].join('');\r\n    };\r\n\r\n    public setTitle = (title: string): void => {\r\n        document.title = title;\r\n    };\r\n\r\n    public setNavimiLinks = (): void => {\r\n        document.querySelectorAll('[navimi-link]').forEach(el => {\r\n            el.removeAttribute('navimi-link');\r\n            el.addEventListener('click', (e: MouseEvent) => {\r\n                e.preventDefault();\r\n                (window as any).navigateTo((event.target as HTMLAnchorElement).pathname);\r\n            });\r\n        });\r\n    };\r\n\r\n    public removeHash = (url: string): string => {\r\n        const hashPos = url.indexOf('#');\r\n        return hashPos > 0 ? url.substring(0, hashPos) : url;\r\n    };\r\n\r\n    public stringify = (obj: any) => {\r\n        const visited = new Map<any, number>();\r\n        let index = 0;\r\n\r\n        const iterateObject = (obj: any): any => {\r\n            if (typeof obj === 'function') {\r\n                return String(obj);\r\n            }\r\n\r\n            if (obj instanceof Error) {\r\n                return obj.message;\r\n            }\r\n\r\n            if (obj === null || typeof obj !== 'object') {\r\n                return obj;\r\n            }\r\n\r\n            if (visited.has(obj)) {\r\n                return `[Circular: ${visited.get(obj)}]`;\r\n            }\r\n\r\n            visited.set(obj, index++);\r\n\r\n            if (Array.isArray(obj)) {\r\n                const aResult = obj.map(iterateObject);\r\n                visited.delete(obj);\r\n                return aResult;\r\n            }\r\n\r\n            const result = Object.keys(obj).reduce((result: any, prop: string) => {\r\n                result[prop] = iterateObject(((obj, prop) => {\r\n                    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                        try {\r\n                            return obj[prop];\r\n                        } catch {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return obj[prop];\r\n                })(obj, prop));\r\n                return result;\r\n            }, {});\r\n\r\n            visited.delete(obj);\r\n\r\n            return result;\r\n        };\r\n\r\n        return JSON.stringify(iterateObject(obj));\r\n    };\r\n\r\n    public cloneObject = (obj: any): Record<string, any> => {\r\n        if (obj === null || typeof obj !== 'object') {\r\n            return obj;\r\n        }\r\n\r\n        if (obj instanceof Error) {\r\n            return new Error(obj.message);\r\n        }\r\n\r\n        if (Array.isArray(obj)) {\r\n            return obj.map(this.cloneObject);\r\n        }\r\n\r\n        return Object.assign({}, ...Object.entries(obj).map(([key, value]) => ({\r\n            [key]: this.cloneObject(value)\r\n        })));\r\n    };\r\n\r\n    public getRouteAndParams = (url: string, routingList: Record<string, INavimi_Route>): { routeItem: INavimi_Route, params: unknown } => {\r\n        const urlParams = this.splitPath(url);\r\n        const catchAll = routingList['*'];\r\n        let routeItem, params;\r\n\r\n        for (const routeUrl in routingList) {\r\n            const routeParams = this.splitPath(routeUrl);\r\n\r\n            if (routeParams.length === urlParams.length) {\r\n                params = this.parsePath(url, routeUrl);\r\n                if (params) {\r\n                    routeItem = routingList[routeUrl];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!routeItem && catchAll) {\r\n            params = this.parsePath(url, url);\r\n            routeItem = catchAll;\r\n        }\r\n\r\n        return { routeItem, params };\r\n    };\r\n\r\n    public getNodeType = (node: Element): string => {\r\n        switch (node.nodeType) {\r\n            case Node.TEXT_NODE:\r\n                return 'text';\r\n            case Node.COMMENT_NODE:\r\n                return 'comment';\r\n            default:\r\n                return node.tagName.toLowerCase();\r\n        }\r\n    };\r\n\r\n    public getNodeContent = (node: Node): string | null => {\r\n        if (node.childNodes.length > 0) {\r\n            return null;\r\n        }\r\n        return node.textContent;\r\n    };\r\n\r\n    public mergeHtmlElement = (templateNode: Element, documentNode: Element, callback: (template: Element, node: Element | DocumentFragment) => void): void => {\r\n        // Clear child nodes\r\n        if (documentNode.childNodes.length > 0 && !templateNode.childNodes.length) {\r\n            documentNode.innerHTML = '';\r\n            return;\r\n        }\r\n\r\n        // Prepare empty node for next round\r\n        if (!documentNode.childNodes.length && templateNode.childNodes.length) {\r\n            const fragment = document.createDocumentFragment();\r\n            callback(templateNode, fragment);\r\n            documentNode.appendChild(fragment);\r\n            return;\r\n        }\r\n\r\n        // Dive deeper into the tree\r\n        if (templateNode.childNodes.length > 0) {\r\n            callback(templateNode, documentNode);\r\n        }\r\n    };\r\n\r\n    public syncAttributes = (templateNode: Element, documentNode: Element): void => {\r\n        if (templateNode.tagName.toLowerCase() !== documentNode.tagName.toLowerCase()) {\r\n            return;\r\n        }\r\n\r\n        const documentNodeAttr: Attr[] = [].slice.call(documentNode.attributes);\r\n        const templateNodeAttr: Attr[] = [].slice.call(templateNode.attributes);\r\n\r\n        const update = templateNodeAttr.filter(templateAttr => {\r\n            const documentAttr = documentNodeAttr.find(\r\n                (docAttr: Attr) => templateAttr.name === docAttr.name\r\n            );\r\n            return documentAttr && templateAttr.value !== documentAttr.value;\r\n        });\r\n        const remove = documentNodeAttr.filter(\r\n            (docAttr) => !templateNodeAttr.some((templateAttr) => docAttr.name === templateAttr.name)\r\n        );\r\n        const add = templateNodeAttr.filter(\r\n            (templateAttr) => !documentNodeAttr.some((docAttr) => templateAttr.name === docAttr.name)\r\n        );\r\n\r\n        remove.forEach((attr) => {\r\n            documentNode.removeAttribute(attr.name);\r\n        });\r\n\r\n        [...update, ...add].forEach(({ name, value }) => {\r\n            documentNode.setAttribute(name, value);\r\n        });\r\n    };\r\n\r\n}\r\n\r\nexport default __Navimi_Helpers;\r\n","import { INavimi_Components, INavimi_Component, INavimi_WrappedComponent } from './@types/INavimi_Components';\r\nimport { INavimi_Helpers } from './@types/INavimi_Helpers';\r\nimport { INavimi_State } from './@types/INavimi_State';\r\nimport { INavimi_Functions } from './@types/Navimi';\r\n\r\nclass __Navimi_Components implements INavimi_Components {\r\n\r\n    private _navimiHelpers: INavimi_Helpers;\r\n    private _navimiState: INavimi_State;\r\n    private _components: Record<string, InstanceType<any>> = {};\r\n    private _uidCounter = 0;\r\n\r\n    public init(navimiHelpers: INavimi_Helpers, navimiState: INavimi_State): void {\r\n\r\n        this._navimiHelpers = navimiHelpers;\r\n        this._navimiState = navimiState;\r\n\r\n        new window.MutationObserver((mutations: MutationRecord[]) => {\r\n            mutations.forEach(mutation => {\r\n                if (mutation.type === 'attributes') {\r\n                    const node = mutation.target as INavimi_Component;\r\n                    if (this._components[node.localName]) {\r\n                        const prevAttributes = this._readAttributes(node);\r\n                        if (!node.shouldUpdate || node.shouldUpdate(prevAttributes, node.props)) {\r\n                            node.update && node.update();\r\n                        }\r\n                    }\r\n                } else {\r\n                    [].slice.call(mutation.addedNodes).map((addedNode: INavimi_Component) => {\r\n                        this._traverseComponentsTree(addedNode, this._registerTag);\r\n                    });\r\n                    [].slice.call(mutation.removedNodes).map((removedNode: INavimi_Component) => {\r\n                        // todo: create a queue to remove components and give priority to adding components\r\n                        this._traverseComponentsTree(removedNode, this._removeComponent);\r\n                    });\r\n                }\r\n            });\r\n        }).observe(document, { childList: true, subtree: true, attributes: true });\r\n    }\r\n\r\n    private _removeComponent = (node: INavimi_Component): void => {\r\n        if (node.localName && !node.__removed && this._components[node.localName]) {\r\n            node.__removed = true;\r\n            this._navimiState.unwatchState(node.__uid);\r\n            this._removeChildComponents(node);\r\n            this._disconnectComponent(node);\r\n            node.remove();\r\n            node.onUnmount && node.onUnmount();\r\n        }\r\n    }\r\n\r\n    private _disconnectComponent = (node: INavimi_Component): void => {\r\n        if (node.parentComponent) {\r\n            node.parentComponent.childComponents =\r\n                node.parentComponent.childComponents\r\n                    .filter(child => child !== node);\r\n        }\r\n    };\r\n\r\n    private _removeChildComponents = (node: INavimi_Component): void => {\r\n        node.childComponents &&\r\n            node.childComponents.map(child => {\r\n                this._removeComponent(child);\r\n            });\r\n    };\r\n\r\n    private _readAttributes = (node: INavimi_Component): Record<string, string> => {\r\n        const prevAttributes = node.props;\r\n        node.props = {};\r\n        [].slice.call(node.attributes).map((attr: any) => {\r\n            const name = attr.name;\r\n            //@ts-ignore\r\n            if (typeof node[name] !== 'function') {\r\n                node.props = {\r\n                    ...node.props || {},\r\n                    [name]: attr.value\r\n                };\r\n            }\r\n        });\r\n        return prevAttributes;\r\n    };\r\n\r\n    private _traverseComponentsTree = (node: Element, callback: (node: Element) => void): void => {\r\n        if (node.localName) {\r\n            if (this._components[node.localName]) {\r\n                callback(node);\r\n            } else {\r\n                [].slice.call(node.childNodes).map((childNode: INavimi_Component) => {\r\n                    this._traverseComponentsTree(childNode, callback);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    private _registerTag = (node: INavimi_Component, parentNode?: INavimi_Component): void => {\r\n        if (node.props || !this._components[node.localName]) {\r\n            return;\r\n        }\r\n\r\n        const componentClass = this._components[node.localName];\r\n\r\n        // initializes the component props\r\n        node.props = {};\r\n        node.parentComponent = undefined;\r\n        node.childComponents = [];\r\n\r\n        this._findParentComponent(node, parentNode);\r\n        this._readAttributes(node);\r\n\r\n        const component = new componentClass(node);\r\n\r\n        component.init();\r\n    };\r\n\r\n    private _findParentComponent = (node: INavimi_Component, parentNode?: INavimi_Component): void => {\r\n\r\n        const register = (parent: INavimi_Component) => {\r\n            node.parentComponent = parent;\r\n            parent.childComponents = [\r\n                ...parent.childComponents || [],\r\n                node,\r\n            ];\r\n        }\r\n\r\n        if (parentNode) {\r\n            register(parentNode);\r\n            return;\r\n        }\r\n\r\n        let parent = node.parentNode as INavimi_Component;\r\n\r\n        while (parent) {\r\n            if (/-/.test(parent.localName) && this._components[parent.localName]) {\r\n                register(parent);\r\n                return;\r\n            }\r\n            parent = parent.parentNode as INavimi_Component;\r\n        }\r\n    }\r\n\r\n    private _bindChildEvents = (parentNode: Element, childNode: Element): void => {\r\n        if (childNode.attributes) {\r\n            [].slice.call(childNode.attributes).map((attr: any) => {\r\n                const name = attr.name;\r\n                //@ts-ignore\r\n                if (typeof childNode[name] === 'function') {\r\n                    //@ts-ignore\r\n                    childNode[name] = childNode[name].bind(parentNode);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    private _registerChildNodes = (parentNode: Element): void => {\r\n        const traverse = (node: Element): void => {\r\n            [].slice.call(node.childNodes).map((childNode: Element) => {\r\n                if (!this._components[childNode.localName]) {\r\n                    // bind child tags events to the parent\r\n                    this._bindChildEvents(parentNode, childNode);\r\n                    traverse(childNode);\r\n                }\r\n            });\r\n        };\r\n        traverse(parentNode);\r\n    };\r\n\r\n    private _mergeHtml = (template: Element, node: Element | DocumentFragment) => {\r\n        const templateNodes: Element[] = [].slice.call(template.childNodes);\r\n        const documentNodes: Element[] = [].slice.call(node.childNodes);\r\n        let diffCount = documentNodes.length - templateNodes.length;\r\n        const templateNodesLen = templateNodes.length;\r\n        const documentNodesLen = documentNodes.length;\r\n\r\n        for (let i = 0; i < templateNodesLen; i++) {\r\n            const templateNode = templateNodes[i];\r\n            const documentNode = documentNodes[i];\r\n\r\n            // new node, create it\r\n            if (!documentNode) {\r\n                node.appendChild(templateNode.cloneNode(true));\r\n                continue;\r\n            }\r\n\r\n            // add/remove nodes to match the template\r\n            if (this._navimiHelpers.getNodeType(templateNode) !== this._navimiHelpers.getNodeType(documentNode)) {\r\n                if (diffCount > 0) {\r\n                    this._traverseComponentsTree(documentNode as Element, this._removeComponent);\r\n                    if (documentNode.parentNode) {\r\n                        documentNode.parentNode.removeChild(documentNode);\r\n                    }\r\n                    i--;\r\n                    diffCount--;\r\n                } else {\r\n                    node.insertBefore(templateNode.cloneNode(true), documentNode);\r\n                }\r\n                continue;\r\n            }\r\n\r\n            // update text content\r\n            const templateContent = this._navimiHelpers.getNodeContent(templateNode);\r\n            const documentContent = this._navimiHelpers.getNodeContent(documentNode);\r\n            if (templateContent && templateContent !== documentContent) {\r\n                documentNode.textContent = templateContent;\r\n            }\r\n\r\n            if (templateNode.localName) {\r\n                this._navimiHelpers.syncAttributes(templateNode, documentNode);\r\n                // Check if the element is a component and stop\r\n                if (!this._components[templateNode.localName]) {\r\n                    this._navimiHelpers.mergeHtmlElement(templateNode, documentNode, this._mergeHtml);\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove extra elements\r\n        diffCount = documentNodesLen - templateNodesLen;\r\n        for (let i = documentNodesLen - 1; i >= templateNodesLen; i--) {\r\n            this._traverseComponentsTree(documentNodes[i] as Element, this._removeComponent);\r\n            if (documentNodes[i].parentNode) {\r\n                documentNodes[i].parentNode.removeChild(documentNodes[i]);\r\n            }\r\n            diffCount--;\r\n        }\r\n\r\n        this._registerChildNodes(node as HTMLElement);\r\n    };\r\n\r\n    public registerComponent = (\r\n        componentName: string,\r\n        componentClass: typeof INavimi_Component,\r\n        getFunctions?: (callerUid: string) => INavimi_Functions,\r\n        services?: Record<string, InstanceType<any>>): InstanceType<any> => {\r\n\r\n        if (!componentName || !/-/.test(componentName)) {\r\n            return;\r\n        }\r\n\r\n        if (!getFunctions) {\r\n            getFunctions = () => undefined;\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const that = this;\r\n\r\n        Object.setPrototypeOf(componentClass.prototype, HTMLElement.prototype);\r\n\r\n        const wrappedComponentClass = class implements INavimi_WrappedComponent {\r\n\r\n            private _component: INavimi_Component;\r\n            private _node: any;\r\n            private _previousTemplate: string;\r\n            private _initalInnerHTML: string;\r\n\r\n            constructor(node: HTMLElement) {\r\n                const uid = `component:${that._uidCounter++}`;\r\n\r\n                this._node = node;\r\n\r\n                this._previousTemplate = undefined;\r\n                this._initalInnerHTML = node.innerHTML;\r\n                node.innerHTML = '';\r\n\r\n                this._component = new componentClass(this._node.props, getFunctions(uid), services);\r\n                this._component.__uid = uid\r\n\r\n                // connects the component code to the tag \r\n                Object.setPrototypeOf(this._node, this._component);\r\n\r\n                // todo: check if this timer (16ms = 60fps) can become an option in case someone needs different fps\r\n                this._component.update = that._navimiHelpers.throttle(this.render, 16, this._node);\r\n            }\r\n\r\n            init = async () => {\r\n                await this.render();\r\n                this._component.onMount && await this._component.onMount.call(this._node);\r\n            }\r\n\r\n            render = async () => {\r\n                const html = this._component.render && await this._component.render.call(this._node, this._initalInnerHTML);\r\n\r\n                if (html && html !== this._previousTemplate) {\r\n\r\n                    this._previousTemplate = html;\r\n\r\n                    const template = new DOMParser().parseFromString(html, 'text/html');\r\n\r\n                    that._mergeHtml(template.querySelector('body'), this._node);\r\n                }\r\n\r\n                this._component.onRender && this._component.onRender.call(this._node);\r\n            }\r\n\r\n        };\r\n\r\n        this._components[componentName] = wrappedComponentClass;\r\n\r\n        return wrappedComponentClass;\r\n    };\r\n\r\n}\r\n\r\nexport default __Navimi_Components;\r\n","import __Navimi_Core from './core';\r\nimport __Navimi_Fetch from './fetch';\r\nimport __Navimi_CSSs from './csss';\r\nimport __Navimi_JSs from './jss';\r\nimport __Navimi_Templates from './templates';\r\nimport __Navimi_Middlewares from './middlewares';\r\nimport __Navimi_State from './state';\r\nimport __Navimi_Hot from './hot';\r\nimport __Navimi_Helpers from './helpers';\r\nimport __Navimi_Components from './components';\r\nimport { \r\n    INavimi_Route, \r\n    INavimi_Options, \r\n    INavimi_Services,\r\n    INavimi\r\n} from './@types/Navimi';\r\nclass Navimi implements INavimi {\r\n\r\n    constructor(routes: Record<string, INavimi_Route>, options?: INavimi_Options, services?: INavimi_Services, \r\n            core?: (routes: Record<string, INavimi_Route>, services?: INavimi_Services, options?: INavimi_Options) => void) {\r\n\r\n        let { \r\n            navimiFetch, \r\n            navimiCSSs,\r\n            navimiJSs,\r\n            navimiTemplates,\r\n            navimiMiddlewares,\r\n            navimiState,\r\n            navimiHot,\r\n            navimiHelpers,\r\n            navimiComponents  \r\n        } = services || {};\r\n\r\n        navimiFetch = navimiFetch || new __Navimi_Fetch()\r\n        navimiCSSs = navimiCSSs || new __Navimi_CSSs();\r\n        navimiJSs = navimiJSs || new __Navimi_JSs();\r\n        navimiTemplates = navimiTemplates || new __Navimi_Templates();\r\n        navimiMiddlewares = navimiMiddlewares || new __Navimi_Middlewares();\r\n        navimiState = navimiState || new __Navimi_State();\r\n        navimiHot = navimiHot || new __Navimi_Hot();\r\n        navimiHelpers = navimiHelpers || new __Navimi_Helpers();\r\n        navimiComponents = navimiComponents || new __Navimi_Components();\r\n\r\n        // setup DI\r\n        navimiComponents.init(navimiHelpers, navimiState);\r\n\r\n        navimiFetch.init(options);\r\n\r\n        navimiCSSs.init(\r\n            navimiFetch\r\n        );\r\n\r\n        navimiJSs.init(\r\n            navimiHelpers,\r\n            navimiFetch,\r\n            navimiCSSs,\r\n            navimiTemplates,\r\n            navimiState,\r\n            navimiComponents,\r\n            options\r\n        );\r\n\r\n        navimiTemplates.init(navimiFetch);\r\n\r\n        navimiState.init(navimiHelpers);\r\n\r\n        const _services = {\r\n            navimiFetch,\r\n            navimiJSs,\r\n            navimiCSSs,\r\n            navimiTemplates,\r\n            navimiMiddlewares,\r\n            navimiState,\r\n            navimiHot,\r\n            navimiHelpers,\r\n            navimiComponents\r\n        };\r\n\r\n        core ? core(routes, _services, options) :\r\n            new __Navimi_Core(routes, _services, options);\r\n    }\r\n\r\n}\r\n\r\nexport default Navimi\r\n"],"names":[],"mappings":"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"}